// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    public static class GetClient
    {
        /// <summary>
        /// Data source to retrieve a specific Auth0 Application client by 'client_id' or 'name'
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Auth0 = Pulumi.Auth0;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var some_client_by_name = Output.Create(Auth0.GetClient.InvokeAsync(new Auth0.GetClientArgs
        ///         {
        ///             Name = "Name of my Application",
        ///         }));
        ///         var some_client_by_id = Output.Create(Auth0.GetClient.InvokeAsync(new Auth0.GetClientArgs
        ///         {
        ///             ClientId = "abcdefghkijklmnopqrstuvwxyz0123456789",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetClientResult> InvokeAsync(GetClientArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetClientResult>("auth0:index/getClient:getClient", args ?? new GetClientArgs(), options.WithDefaults());

        /// <summary>
        /// Data source to retrieve a specific Auth0 Application client by 'client_id' or 'name'
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Auth0 = Pulumi.Auth0;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var some_client_by_name = Output.Create(Auth0.GetClient.InvokeAsync(new Auth0.GetClientArgs
        ///         {
        ///             Name = "Name of my Application",
        ///         }));
        ///         var some_client_by_id = Output.Create(Auth0.GetClient.InvokeAsync(new Auth0.GetClientArgs
        ///         {
        ///             ClientId = "abcdefghkijklmnopqrstuvwxyz0123456789",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetClientResult> Invoke(GetClientInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetClientResult>("auth0:index/getClient:getClient", args ?? new GetClientInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClientArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// String. client_id of the application.
        /// </summary>
        [Input("clientId")]
        public string? ClientId { get; set; }

        /// <summary>
        /// String. Name of the application. Ignored if `client_id` is also specified.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetClientArgs()
        {
        }
    }

    public sealed class GetClientInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// String. client_id of the application.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        /// <summary>
        /// String. Name of the application. Ignored if `client_id` is also specified.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetClientInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetClientResult
    {
        public readonly ImmutableArray<Outputs.GetClientAddonResult> Addons;
        public readonly ImmutableArray<string> AllowedClients;
        public readonly ImmutableArray<string> AllowedLogoutUrls;
        public readonly ImmutableArray<string> AllowedOrigins;
        public readonly string AppType;
        public readonly ImmutableArray<string> Callbacks;
        public readonly string? ClientId;
        public readonly ImmutableDictionary<string, object> ClientMetadata;
        public readonly string ClientSecret;
        public readonly bool CrossOriginAuth;
        public readonly string CrossOriginLoc;
        public readonly string CustomLoginPage;
        public readonly bool CustomLoginPageOn;
        public readonly string Description;
        public readonly ImmutableDictionary<string, string> EncryptionKey;
        public readonly string FormTemplate;
        public readonly ImmutableArray<string> GrantTypes;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InitiateLoginUri;
        public readonly bool IsFirstParty;
        public readonly bool IsTokenEndpointIpHeaderTrusted;
        public readonly ImmutableArray<Outputs.GetClientJwtConfigurationResult> JwtConfigurations;
        public readonly string LogoUri;
        public readonly ImmutableArray<Outputs.GetClientMobileResult> Mobiles;
        public readonly string? Name;
        public readonly ImmutableArray<Outputs.GetClientNativeSocialLoginResult> NativeSocialLogins;
        public readonly bool OidcConformant;
        public readonly string OrganizationRequireBehavior;
        public readonly string OrganizationUsage;
        public readonly ImmutableArray<Outputs.GetClientRefreshTokenResult> RefreshTokens;
        public readonly ImmutableArray<ImmutableDictionary<string, object>> SigningKeys;
        public readonly bool Sso;
        public readonly bool SsoDisabled;
        public readonly string TokenEndpointAuthMethod;
        public readonly ImmutableArray<string> WebOrigins;

        [OutputConstructor]
        private GetClientResult(
            ImmutableArray<Outputs.GetClientAddonResult> addons,

            ImmutableArray<string> allowedClients,

            ImmutableArray<string> allowedLogoutUrls,

            ImmutableArray<string> allowedOrigins,

            string appType,

            ImmutableArray<string> callbacks,

            string? clientId,

            ImmutableDictionary<string, object> clientMetadata,

            string clientSecret,

            bool crossOriginAuth,

            string crossOriginLoc,

            string customLoginPage,

            bool customLoginPageOn,

            string description,

            ImmutableDictionary<string, string> encryptionKey,

            string formTemplate,

            ImmutableArray<string> grantTypes,

            string id,

            string initiateLoginUri,

            bool isFirstParty,

            bool isTokenEndpointIpHeaderTrusted,

            ImmutableArray<Outputs.GetClientJwtConfigurationResult> jwtConfigurations,

            string logoUri,

            ImmutableArray<Outputs.GetClientMobileResult> mobiles,

            string? name,

            ImmutableArray<Outputs.GetClientNativeSocialLoginResult> nativeSocialLogins,

            bool oidcConformant,

            string organizationRequireBehavior,

            string organizationUsage,

            ImmutableArray<Outputs.GetClientRefreshTokenResult> refreshTokens,

            ImmutableArray<ImmutableDictionary<string, object>> signingKeys,

            bool sso,

            bool ssoDisabled,

            string tokenEndpointAuthMethod,

            ImmutableArray<string> webOrigins)
        {
            Addons = addons;
            AllowedClients = allowedClients;
            AllowedLogoutUrls = allowedLogoutUrls;
            AllowedOrigins = allowedOrigins;
            AppType = appType;
            Callbacks = callbacks;
            ClientId = clientId;
            ClientMetadata = clientMetadata;
            ClientSecret = clientSecret;
            CrossOriginAuth = crossOriginAuth;
            CrossOriginLoc = crossOriginLoc;
            CustomLoginPage = customLoginPage;
            CustomLoginPageOn = customLoginPageOn;
            Description = description;
            EncryptionKey = encryptionKey;
            FormTemplate = formTemplate;
            GrantTypes = grantTypes;
            Id = id;
            InitiateLoginUri = initiateLoginUri;
            IsFirstParty = isFirstParty;
            IsTokenEndpointIpHeaderTrusted = isTokenEndpointIpHeaderTrusted;
            JwtConfigurations = jwtConfigurations;
            LogoUri = logoUri;
            Mobiles = mobiles;
            Name = name;
            NativeSocialLogins = nativeSocialLogins;
            OidcConformant = oidcConformant;
            OrganizationRequireBehavior = organizationRequireBehavior;
            OrganizationUsage = organizationUsage;
            RefreshTokens = refreshTokens;
            SigningKeys = signingKeys;
            Sso = sso;
            SsoDisabled = ssoDisabled;
            TokenEndpointAuthMethod = tokenEndpointAuthMethod;
            WebOrigins = webOrigins;
        }
    }
}
