// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0;

import com.pulumi.auth0.TenantArgs;
import com.pulumi.auth0.Utilities;
import com.pulumi.auth0.inputs.TenantState;
import com.pulumi.auth0.outputs.TenantChangePassword;
import com.pulumi.auth0.outputs.TenantErrorPage;
import com.pulumi.auth0.outputs.TenantFlags;
import com.pulumi.auth0.outputs.TenantGuardianMfaPage;
import com.pulumi.auth0.outputs.TenantSessionCookie;
import com.pulumi.auth0.outputs.TenantUniversalLogin;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * With this resource, you can manage Auth0 tenants, including setting logos and support contact information, setting error
 * pages, and configuring default tenant behaviors.
 * 
 * &gt; Auth0 does not currently support creating tenants through the Management API. Therefore, this resource can only
 * manage an existing tenant created through the Auth0 dashboard.
 * 
 * Auth0 does not currently support adding/removing extensions on tenants through their API. The Auth0 dashboard must be
 * used to add/remove extensions.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.auth0.Tenant;
 * import com.pulumi.auth0.TenantArgs;
 * import com.pulumi.auth0.inputs.TenantChangePasswordArgs;
 * import com.pulumi.auth0.inputs.TenantGuardianMfaPageArgs;
 * import com.pulumi.auth0.inputs.TenantErrorPageArgs;
 * import com.pulumi.auth0.inputs.TenantSessionCookieArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var tenant = new Tenant(&#34;tenant&#34;, TenantArgs.builder()        
 *             .changePassword(TenantChangePasswordArgs.builder()
 *                 .enabled(true)
 *                 .html(Files.readString(Paths.get(&#34;./password_reset.html&#34;)))
 *                 .build())
 *             .guardianMfaPage(TenantGuardianMfaPageArgs.builder()
 *                 .enabled(true)
 *                 .html(Files.readString(Paths.get(&#34;./guardian_multifactor.html&#34;)))
 *                 .build())
 *             .defaultAudience(&#34;&lt;client_id&gt;&#34;)
 *             .defaultDirectory(&#34;Connection-Name&#34;)
 *             .errorPage(TenantErrorPageArgs.builder()
 *                 .html(Files.readString(Paths.get(&#34;./error.html&#34;)))
 *                 .showLogLink(true)
 *                 .url(&#34;http://mysite/errors&#34;)
 *                 .build())
 *             .friendlyName(&#34;Tenant Name&#34;)
 *             .pictureUrl(&#34;http://mysite/logo.png&#34;)
 *             .supportEmail(&#34;support@mysite&#34;)
 *             .supportUrl(&#34;http://mysite/support&#34;)
 *             .allowedLogoutUrls(&#34;http://mysite/logout&#34;)
 *             .sessionLifetime(46000)
 *             .sandboxVersion(&#34;8&#34;)
 *             .sessionCookie(TenantSessionCookieArgs.builder()
 *                 .mode(&#34;non-persistent&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * As this is not a resource identifiable by an ID within the Auth0 Management API, tenant can be imported using a random string. We recommend [Version 4 UUID](https://www.uuidgenerator.net/version4) e.g.
 * 
 * ```sh
 *  $ pulumi import auth0:index/tenant:Tenant tenant 82f4f21b-017a-319d-92e7-2291c1ca36c4
 * ```
 * 
 */
@ResourceType(type="auth0:index/tenant:Tenant")
public class Tenant extends com.pulumi.resources.CustomResource {
    /**
     * List(String). URLs that Auth0 may redirect to after logout.
     * 
     */
    @Export(name="allowedLogoutUrls", type=List.class, parameters={String.class})
    private Output<List<String>> allowedLogoutUrls;

    /**
     * @return List(String). URLs that Auth0 may redirect to after logout.
     * 
     */
    public Output<List<String>> allowedLogoutUrls() {
        return this.allowedLogoutUrls;
    }
    /**
     * List(Resource). Configuration settings for change passsword page. For details, see Change Password Page.
     * 
     */
    @Export(name="changePassword", type=TenantChangePassword.class, parameters={})
    private Output<TenantChangePassword> changePassword;

    /**
     * @return List(Resource). Configuration settings for change passsword page. For details, see Change Password Page.
     * 
     */
    public Output<TenantChangePassword> changePassword() {
        return this.changePassword;
    }
    /**
     * String. API Audience to use by default for API Authorization flows. This setting is equivalent to appending the audience to every authorization request made to the tenant for every application.
     * 
     */
    @Export(name="defaultAudience", type=String.class, parameters={})
    private Output<String> defaultAudience;

    /**
     * @return String. API Audience to use by default for API Authorization flows. This setting is equivalent to appending the audience to every authorization request made to the tenant for every application.
     * 
     */
    public Output<String> defaultAudience() {
        return this.defaultAudience;
    }
    /**
     * String. Name of the connection to be used for Password Grant exchanges. Options include `auth0-adldap`, `ad`, `auth0`, `email`, `sms`, `waad`, and `adfs`.
     * 
     */
    @Export(name="defaultDirectory", type=String.class, parameters={})
    private Output<String> defaultDirectory;

    /**
     * @return String. Name of the connection to be used for Password Grant exchanges. Options include `auth0-adldap`, `ad`, `auth0`, `email`, `sms`, `waad`, and `adfs`.
     * 
     */
    public Output<String> defaultDirectory() {
        return this.defaultDirectory;
    }
    /**
     * String. The default absolute redirection uri, must be https and cannot contain a fragment.
     * 
     */
    @Export(name="defaultRedirectionUri", type=String.class, parameters={})
    private Output<String> defaultRedirectionUri;

    /**
     * @return String. The default absolute redirection uri, must be https and cannot contain a fragment.
     * 
     */
    public Output<String> defaultRedirectionUri() {
        return this.defaultRedirectionUri;
    }
    /**
     * List(String). Supported locales for the user interface. The first locale in the list will be used to set the default locale.
     * 
     */
    @Export(name="enabledLocales", type=List.class, parameters={String.class})
    private Output<List<String>> enabledLocales;

    /**
     * @return List(String). Supported locales for the user interface. The first locale in the list will be used to set the default locale.
     * 
     */
    public Output<List<String>> enabledLocales() {
        return this.enabledLocales;
    }
    /**
     * List(Resource). Configuration settings for error pages. For details, see Error Page.
     * 
     */
    @Export(name="errorPage", type=TenantErrorPage.class, parameters={})
    private Output<TenantErrorPage> errorPage;

    /**
     * @return List(Resource). Configuration settings for error pages. For details, see Error Page.
     * 
     */
    public Output<TenantErrorPage> errorPage() {
        return this.errorPage;
    }
    /**
     * List(Resource). Configuration settings for tenant flags. For details, see Flags.
     * 
     */
    @Export(name="flags", type=TenantFlags.class, parameters={})
    private Output<TenantFlags> flags;

    /**
     * @return List(Resource). Configuration settings for tenant flags. For details, see Flags.
     * 
     */
    public Output<TenantFlags> flags() {
        return this.flags;
    }
    /**
     * String. Friendly name for the tenant.
     * 
     */
    @Export(name="friendlyName", type=String.class, parameters={})
    private Output<String> friendlyName;

    /**
     * @return String. Friendly name for the tenant.
     * 
     */
    public Output<String> friendlyName() {
        return this.friendlyName;
    }
    /**
     * List(Resource). Configuration settings for the Guardian MFA page. For details, see Guardian MFA Page.
     * 
     */
    @Export(name="guardianMfaPage", type=TenantGuardianMfaPage.class, parameters={})
    private Output<TenantGuardianMfaPage> guardianMfaPage;

    /**
     * @return List(Resource). Configuration settings for the Guardian MFA page. For details, see Guardian MFA Page.
     * 
     */
    public Output<TenantGuardianMfaPage> guardianMfaPage() {
        return this.guardianMfaPage;
    }
    /**
     * Integer. Number of hours during which a session can be inactive before the user must log in again.
     * 
     */
    @Export(name="idleSessionLifetime", type=Double.class, parameters={})
    private Output</* @Nullable */ Double> idleSessionLifetime;

    /**
     * @return Integer. Number of hours during which a session can be inactive before the user must log in again.
     * 
     */
    public Output<Optional<Double>> idleSessionLifetime() {
        return Codegen.optional(this.idleSessionLifetime);
    }
    /**
     * . String URL of logo to be shown for the tenant. Recommended size is 150px x 150px. If no URL is provided, the Auth0 logo will be used.
     * 
     */
    @Export(name="pictureUrl", type=String.class, parameters={})
    private Output<String> pictureUrl;

    /**
     * @return . String URL of logo to be shown for the tenant. Recommended size is 150px x 150px. If no URL is provided, the Auth0 logo will be used.
     * 
     */
    public Output<String> pictureUrl() {
        return this.pictureUrl;
    }
    /**
     * String. Selected sandbox version for the extensibility environment, which allows you to use custom scripts to extend parts of Auth0&#39;s functionality.
     * 
     */
    @Export(name="sandboxVersion", type=String.class, parameters={})
    private Output<String> sandboxVersion;

    /**
     * @return String. Selected sandbox version for the extensibility environment, which allows you to use custom scripts to extend parts of Auth0&#39;s functionality.
     * 
     */
    public Output<String> sandboxVersion() {
        return this.sandboxVersion;
    }
    /**
     * List(Resource). Alters behavior of tenant&#39;s session cookie. Contains a single `mode` property that accepts two values: `&#34;persistent&#34;` or `&#34;non-persistent&#34;`.
     * 
     */
    @Export(name="sessionCookie", type=TenantSessionCookie.class, parameters={})
    private Output<TenantSessionCookie> sessionCookie;

    /**
     * @return List(Resource). Alters behavior of tenant&#39;s session cookie. Contains a single `mode` property that accepts two values: `&#34;persistent&#34;` or `&#34;non-persistent&#34;`.
     * 
     */
    public Output<TenantSessionCookie> sessionCookie() {
        return this.sessionCookie;
    }
    /**
     * Integer. Number of hours during which a session will stay valid.
     * 
     */
    @Export(name="sessionLifetime", type=Double.class, parameters={})
    private Output</* @Nullable */ Double> sessionLifetime;

    /**
     * @return Integer. Number of hours during which a session will stay valid.
     * 
     */
    public Output<Optional<Double>> sessionLifetime() {
        return Codegen.optional(this.sessionLifetime);
    }
    /**
     * String. Support email address for authenticating users.
     * 
     */
    @Export(name="supportEmail", type=String.class, parameters={})
    private Output<String> supportEmail;

    /**
     * @return String. Support email address for authenticating users.
     * 
     */
    public Output<String> supportEmail() {
        return this.supportEmail;
    }
    /**
     * String. Support URL for authenticating users.
     * 
     */
    @Export(name="supportUrl", type=String.class, parameters={})
    private Output<String> supportUrl;

    /**
     * @return String. Support URL for authenticating users.
     * 
     */
    public Output<String> supportUrl() {
        return this.supportUrl;
    }
    /**
     * List(Resource). Configuration settings for Universal Login. For details, see Universal Login.
     * 
     */
    @Export(name="universalLogin", type=TenantUniversalLogin.class, parameters={})
    private Output<TenantUniversalLogin> universalLogin;

    /**
     * @return List(Resource). Configuration settings for Universal Login. For details, see Universal Login.
     * 
     */
    public Output<TenantUniversalLogin> universalLogin() {
        return this.universalLogin;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Tenant(String name) {
        this(name, TenantArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Tenant(String name, @Nullable TenantArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Tenant(String name, @Nullable TenantArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("auth0:index/tenant:Tenant", name, args == null ? TenantArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Tenant(String name, Output<String> id, @Nullable TenantState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("auth0:index/tenant:Tenant", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Tenant get(String name, Output<String> id, @Nullable TenantState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Tenant(name, id, state, options);
    }
}
