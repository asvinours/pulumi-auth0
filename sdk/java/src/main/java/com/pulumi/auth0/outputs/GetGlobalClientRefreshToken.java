// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetGlobalClientRefreshToken {
    private final String expirationType;
    private final Integer idleTokenLifetime;
    private final Boolean infiniteIdleTokenLifetime;
    private final Boolean infiniteTokenLifetime;
    private final Integer leeway;
    private final String rotationType;
    private final Integer tokenLifetime;

    @CustomType.Constructor
    private GetGlobalClientRefreshToken(
        @CustomType.Parameter("expirationType") String expirationType,
        @CustomType.Parameter("idleTokenLifetime") Integer idleTokenLifetime,
        @CustomType.Parameter("infiniteIdleTokenLifetime") Boolean infiniteIdleTokenLifetime,
        @CustomType.Parameter("infiniteTokenLifetime") Boolean infiniteTokenLifetime,
        @CustomType.Parameter("leeway") Integer leeway,
        @CustomType.Parameter("rotationType") String rotationType,
        @CustomType.Parameter("tokenLifetime") Integer tokenLifetime) {
        this.expirationType = expirationType;
        this.idleTokenLifetime = idleTokenLifetime;
        this.infiniteIdleTokenLifetime = infiniteIdleTokenLifetime;
        this.infiniteTokenLifetime = infiniteTokenLifetime;
        this.leeway = leeway;
        this.rotationType = rotationType;
        this.tokenLifetime = tokenLifetime;
    }

    public String expirationType() {
        return this.expirationType;
    }
    public Integer idleTokenLifetime() {
        return this.idleTokenLifetime;
    }
    public Boolean infiniteIdleTokenLifetime() {
        return this.infiniteIdleTokenLifetime;
    }
    public Boolean infiniteTokenLifetime() {
        return this.infiniteTokenLifetime;
    }
    public Integer leeway() {
        return this.leeway;
    }
    public String rotationType() {
        return this.rotationType;
    }
    public Integer tokenLifetime() {
        return this.tokenLifetime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGlobalClientRefreshToken defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String expirationType;
        private Integer idleTokenLifetime;
        private Boolean infiniteIdleTokenLifetime;
        private Boolean infiniteTokenLifetime;
        private Integer leeway;
        private String rotationType;
        private Integer tokenLifetime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetGlobalClientRefreshToken defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expirationType = defaults.expirationType;
    	      this.idleTokenLifetime = defaults.idleTokenLifetime;
    	      this.infiniteIdleTokenLifetime = defaults.infiniteIdleTokenLifetime;
    	      this.infiniteTokenLifetime = defaults.infiniteTokenLifetime;
    	      this.leeway = defaults.leeway;
    	      this.rotationType = defaults.rotationType;
    	      this.tokenLifetime = defaults.tokenLifetime;
        }

        public Builder expirationType(String expirationType) {
            this.expirationType = Objects.requireNonNull(expirationType);
            return this;
        }
        public Builder idleTokenLifetime(Integer idleTokenLifetime) {
            this.idleTokenLifetime = Objects.requireNonNull(idleTokenLifetime);
            return this;
        }
        public Builder infiniteIdleTokenLifetime(Boolean infiniteIdleTokenLifetime) {
            this.infiniteIdleTokenLifetime = Objects.requireNonNull(infiniteIdleTokenLifetime);
            return this;
        }
        public Builder infiniteTokenLifetime(Boolean infiniteTokenLifetime) {
            this.infiniteTokenLifetime = Objects.requireNonNull(infiniteTokenLifetime);
            return this;
        }
        public Builder leeway(Integer leeway) {
            this.leeway = Objects.requireNonNull(leeway);
            return this;
        }
        public Builder rotationType(String rotationType) {
            this.rotationType = Objects.requireNonNull(rotationType);
            return this;
        }
        public Builder tokenLifetime(Integer tokenLifetime) {
            this.tokenLifetime = Objects.requireNonNull(tokenLifetime);
            return this;
        }        public GetGlobalClientRefreshToken build() {
            return new GetGlobalClientRefreshToken(expirationType, idleTokenLifetime, infiniteIdleTokenLifetime, infiniteTokenLifetime, leeway, rotationType, tokenLifetime);
        }
    }
}
