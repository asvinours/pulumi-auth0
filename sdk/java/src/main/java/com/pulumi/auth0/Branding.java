// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0;

import com.pulumi.auth0.BrandingArgs;
import com.pulumi.auth0.Utilities;
import com.pulumi.auth0.inputs.BrandingState;
import com.pulumi.auth0.outputs.BrandingColors;
import com.pulumi.auth0.outputs.BrandingFont;
import com.pulumi.auth0.outputs.BrandingUniversalLogin;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource allows you to manage branding within your Auth0 tenant.
 * 
 * Auth0 can be customized with a look and feel that aligns with your organization&#39;s brand requirements and user
 * expectations.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.auth0.Branding;
 * import com.pulumi.auth0.BrandingArgs;
 * import com.pulumi.auth0.inputs.BrandingColorsArgs;
 * import com.pulumi.auth0.inputs.BrandingUniversalLoginArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var myBrand = new Branding(&#34;myBrand&#34;, BrandingArgs.builder()        
 *             .colors(BrandingColorsArgs.builder()
 *                 .pageBackground(&#34;#000000&#34;)
 *                 .primary(&#34;#0059d6&#34;)
 *                 .build())
 *             .logoUrl(&#34;https://mycompany.org/logo.png&#34;)
 *             .universalLogin(BrandingUniversalLoginArgs.builder()
 *                 .body(&#34;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;{%- auth0:head -%}&lt;/head&gt;&lt;body&gt;{%- auth0:widget -%}&lt;/body&gt;&lt;/html&gt;&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="auth0:index/branding:Branding")
public class Branding extends com.pulumi.resources.CustomResource {
    /**
     * List(Resource). Configuration settings for colors for branding. See Colors.
     * 
     */
    @Export(name="colors", type=BrandingColors.class, parameters={})
    private Output</* @Nullable */ BrandingColors> colors;

    /**
     * @return List(Resource). Configuration settings for colors for branding. See Colors.
     * 
     */
    public Output<Optional<BrandingColors>> colors() {
        return Codegen.optional(this.colors);
    }
    /**
     * String. URL for the favicon.
     * 
     */
    @Export(name="faviconUrl", type=String.class, parameters={})
    private Output<String> faviconUrl;

    /**
     * @return String. URL for the favicon.
     * 
     */
    public Output<String> faviconUrl() {
        return this.faviconUrl;
    }
    /**
     * List(Resource). Configuration settings to customize the font. See Font.
     * 
     */
    @Export(name="font", type=BrandingFont.class, parameters={})
    private Output</* @Nullable */ BrandingFont> font;

    /**
     * @return List(Resource). Configuration settings to customize the font. See Font.
     * 
     */
    public Output<Optional<BrandingFont>> font() {
        return Codegen.optional(this.font);
    }
    /**
     * String. URL of logo for branding.
     * 
     */
    @Export(name="logoUrl", type=String.class, parameters={})
    private Output<String> logoUrl;

    /**
     * @return String. URL of logo for branding.
     * 
     */
    public Output<String> logoUrl() {
        return this.logoUrl;
    }
    /**
     * List(Resource). Configuration settings for Universal Login.
     * See Universal Login. This capability can only be used if the tenant has
     * [Custom Domains](https://auth0.com/docs/custom-domains) enabled.
     * 
     */
    @Export(name="universalLogin", type=BrandingUniversalLogin.class, parameters={})
    private Output</* @Nullable */ BrandingUniversalLogin> universalLogin;

    /**
     * @return List(Resource). Configuration settings for Universal Login.
     * See Universal Login. This capability can only be used if the tenant has
     * [Custom Domains](https://auth0.com/docs/custom-domains) enabled.
     * 
     */
    public Output<Optional<BrandingUniversalLogin>> universalLogin() {
        return Codegen.optional(this.universalLogin);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Branding(String name) {
        this(name, BrandingArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Branding(String name, @Nullable BrandingArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Branding(String name, @Nullable BrandingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("auth0:index/branding:Branding", name, args == null ? BrandingArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Branding(String name, Output<String> id, @Nullable BrandingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("auth0:index/branding:Branding", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Branding get(String name, Output<String> id, @Nullable BrandingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Branding(name, id, state, options);
    }
}
