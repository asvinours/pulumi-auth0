// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LogStreamSink {
    /**
     * @return The AWS Account ID
     * 
     */
    private final @Nullable String awsAccountId;
    /**
     * @return Name of the Partner Event Source to be used with AWS. Generally generated by Auth0 and passed to AWS so this should generally be an output attribute.
     * 
     */
    private final @Nullable String awsPartnerEventSource;
    /**
     * @return The AWS Region (i.e &#34;us-east-2&#34;)
     * 
     */
    private final @Nullable String awsRegion;
    /**
     * @return Name of the Partner Topic to be used with Azure.  Generally should not be specified.
     * 
     */
    private final @Nullable String azurePartnerTopic;
    /**
     * @return The Azure region code (i.e. &#34;ne&#34;)
     * 
     */
    private final @Nullable String azureRegion;
    /**
     * @return The Azure EventGrid resource group which allows you to manage all Azure assets within one subscription
     * 
     */
    private final @Nullable String azureResourceGroup;
    /**
     * @return The unique alphanumeric string that identifies your Azure subscription
     * 
     */
    private final @Nullable String azureSubscriptionId;
    /**
     * @return The Datadog API key
     * 
     */
    private final @Nullable String datadogApiKey;
    /**
     * @return The Datadog region. Options are [&#34;us&#34;, &#34;eu&#34;, &#34;us3&#34;, &#34;us5&#34;]
     * 
     */
    private final @Nullable String datadogRegion;
    /**
     * @return Sent in the HTTP &#34;Authorization&#34; header with each request
     * 
     */
    private final @Nullable String httpAuthorization;
    /**
     * @return The format of data sent over HTTP. Options are &#34;JSONLINES&#34;, &#34;JSONARRAY&#34; or &#34;JSONOBJECT&#34;
     * 
     */
    private final @Nullable String httpContentFormat;
    /**
     * @return The ContentType header to send over HTTP.  Common value is &#34;application/json&#34;
     * 
     */
    private final @Nullable String httpContentType;
    /**
     * @return Additional HTTP headers to be included as part of the HTTP request
     * 
     */
    private final @Nullable List<Map<String,String>> httpCustomHeaders;
    /**
     * @return The HTTP endpoint to send streaming logs
     * 
     */
    private final @Nullable String httpEndpoint;
    /**
     * @return The Splunk domain name
     * 
     */
    private final @Nullable String splunkDomain;
    private final @Nullable String splunkPort;
    /**
     * @return This toggle should be turned off when using self-signed certificates
     * 
     */
    private final @Nullable Boolean splunkSecure;
    /**
     * @return The Splunk access token
     * 
     */
    private final @Nullable String splunkToken;
    /**
     * @return Generated URL for your defined HTTP source in Sumo Logic for collecting streaming data from Auth0
     * 
     */
    private final @Nullable String sumoSourceAddress;

    @CustomType.Constructor
    private LogStreamSink(
        @CustomType.Parameter("awsAccountId") @Nullable String awsAccountId,
        @CustomType.Parameter("awsPartnerEventSource") @Nullable String awsPartnerEventSource,
        @CustomType.Parameter("awsRegion") @Nullable String awsRegion,
        @CustomType.Parameter("azurePartnerTopic") @Nullable String azurePartnerTopic,
        @CustomType.Parameter("azureRegion") @Nullable String azureRegion,
        @CustomType.Parameter("azureResourceGroup") @Nullable String azureResourceGroup,
        @CustomType.Parameter("azureSubscriptionId") @Nullable String azureSubscriptionId,
        @CustomType.Parameter("datadogApiKey") @Nullable String datadogApiKey,
        @CustomType.Parameter("datadogRegion") @Nullable String datadogRegion,
        @CustomType.Parameter("httpAuthorization") @Nullable String httpAuthorization,
        @CustomType.Parameter("httpContentFormat") @Nullable String httpContentFormat,
        @CustomType.Parameter("httpContentType") @Nullable String httpContentType,
        @CustomType.Parameter("httpCustomHeaders") @Nullable List<Map<String,String>> httpCustomHeaders,
        @CustomType.Parameter("httpEndpoint") @Nullable String httpEndpoint,
        @CustomType.Parameter("splunkDomain") @Nullable String splunkDomain,
        @CustomType.Parameter("splunkPort") @Nullable String splunkPort,
        @CustomType.Parameter("splunkSecure") @Nullable Boolean splunkSecure,
        @CustomType.Parameter("splunkToken") @Nullable String splunkToken,
        @CustomType.Parameter("sumoSourceAddress") @Nullable String sumoSourceAddress) {
        this.awsAccountId = awsAccountId;
        this.awsPartnerEventSource = awsPartnerEventSource;
        this.awsRegion = awsRegion;
        this.azurePartnerTopic = azurePartnerTopic;
        this.azureRegion = azureRegion;
        this.azureResourceGroup = azureResourceGroup;
        this.azureSubscriptionId = azureSubscriptionId;
        this.datadogApiKey = datadogApiKey;
        this.datadogRegion = datadogRegion;
        this.httpAuthorization = httpAuthorization;
        this.httpContentFormat = httpContentFormat;
        this.httpContentType = httpContentType;
        this.httpCustomHeaders = httpCustomHeaders;
        this.httpEndpoint = httpEndpoint;
        this.splunkDomain = splunkDomain;
        this.splunkPort = splunkPort;
        this.splunkSecure = splunkSecure;
        this.splunkToken = splunkToken;
        this.sumoSourceAddress = sumoSourceAddress;
    }

    /**
     * @return The AWS Account ID
     * 
     */
    public Optional<String> awsAccountId() {
        return Optional.ofNullable(this.awsAccountId);
    }
    /**
     * @return Name of the Partner Event Source to be used with AWS. Generally generated by Auth0 and passed to AWS so this should generally be an output attribute.
     * 
     */
    public Optional<String> awsPartnerEventSource() {
        return Optional.ofNullable(this.awsPartnerEventSource);
    }
    /**
     * @return The AWS Region (i.e &#34;us-east-2&#34;)
     * 
     */
    public Optional<String> awsRegion() {
        return Optional.ofNullable(this.awsRegion);
    }
    /**
     * @return Name of the Partner Topic to be used with Azure.  Generally should not be specified.
     * 
     */
    public Optional<String> azurePartnerTopic() {
        return Optional.ofNullable(this.azurePartnerTopic);
    }
    /**
     * @return The Azure region code (i.e. &#34;ne&#34;)
     * 
     */
    public Optional<String> azureRegion() {
        return Optional.ofNullable(this.azureRegion);
    }
    /**
     * @return The Azure EventGrid resource group which allows you to manage all Azure assets within one subscription
     * 
     */
    public Optional<String> azureResourceGroup() {
        return Optional.ofNullable(this.azureResourceGroup);
    }
    /**
     * @return The unique alphanumeric string that identifies your Azure subscription
     * 
     */
    public Optional<String> azureSubscriptionId() {
        return Optional.ofNullable(this.azureSubscriptionId);
    }
    /**
     * @return The Datadog API key
     * 
     */
    public Optional<String> datadogApiKey() {
        return Optional.ofNullable(this.datadogApiKey);
    }
    /**
     * @return The Datadog region. Options are [&#34;us&#34;, &#34;eu&#34;, &#34;us3&#34;, &#34;us5&#34;]
     * 
     */
    public Optional<String> datadogRegion() {
        return Optional.ofNullable(this.datadogRegion);
    }
    /**
     * @return Sent in the HTTP &#34;Authorization&#34; header with each request
     * 
     */
    public Optional<String> httpAuthorization() {
        return Optional.ofNullable(this.httpAuthorization);
    }
    /**
     * @return The format of data sent over HTTP. Options are &#34;JSONLINES&#34;, &#34;JSONARRAY&#34; or &#34;JSONOBJECT&#34;
     * 
     */
    public Optional<String> httpContentFormat() {
        return Optional.ofNullable(this.httpContentFormat);
    }
    /**
     * @return The ContentType header to send over HTTP.  Common value is &#34;application/json&#34;
     * 
     */
    public Optional<String> httpContentType() {
        return Optional.ofNullable(this.httpContentType);
    }
    /**
     * @return Additional HTTP headers to be included as part of the HTTP request
     * 
     */
    public List<Map<String,String>> httpCustomHeaders() {
        return this.httpCustomHeaders == null ? List.of() : this.httpCustomHeaders;
    }
    /**
     * @return The HTTP endpoint to send streaming logs
     * 
     */
    public Optional<String> httpEndpoint() {
        return Optional.ofNullable(this.httpEndpoint);
    }
    /**
     * @return The Splunk domain name
     * 
     */
    public Optional<String> splunkDomain() {
        return Optional.ofNullable(this.splunkDomain);
    }
    public Optional<String> splunkPort() {
        return Optional.ofNullable(this.splunkPort);
    }
    /**
     * @return This toggle should be turned off when using self-signed certificates
     * 
     */
    public Optional<Boolean> splunkSecure() {
        return Optional.ofNullable(this.splunkSecure);
    }
    /**
     * @return The Splunk access token
     * 
     */
    public Optional<String> splunkToken() {
        return Optional.ofNullable(this.splunkToken);
    }
    /**
     * @return Generated URL for your defined HTTP source in Sumo Logic for collecting streaming data from Auth0
     * 
     */
    public Optional<String> sumoSourceAddress() {
        return Optional.ofNullable(this.sumoSourceAddress);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogStreamSink defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String awsAccountId;
        private @Nullable String awsPartnerEventSource;
        private @Nullable String awsRegion;
        private @Nullable String azurePartnerTopic;
        private @Nullable String azureRegion;
        private @Nullable String azureResourceGroup;
        private @Nullable String azureSubscriptionId;
        private @Nullable String datadogApiKey;
        private @Nullable String datadogRegion;
        private @Nullable String httpAuthorization;
        private @Nullable String httpContentFormat;
        private @Nullable String httpContentType;
        private @Nullable List<Map<String,String>> httpCustomHeaders;
        private @Nullable String httpEndpoint;
        private @Nullable String splunkDomain;
        private @Nullable String splunkPort;
        private @Nullable Boolean splunkSecure;
        private @Nullable String splunkToken;
        private @Nullable String sumoSourceAddress;

        public Builder() {
    	      // Empty
        }

        public Builder(LogStreamSink defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsAccountId = defaults.awsAccountId;
    	      this.awsPartnerEventSource = defaults.awsPartnerEventSource;
    	      this.awsRegion = defaults.awsRegion;
    	      this.azurePartnerTopic = defaults.azurePartnerTopic;
    	      this.azureRegion = defaults.azureRegion;
    	      this.azureResourceGroup = defaults.azureResourceGroup;
    	      this.azureSubscriptionId = defaults.azureSubscriptionId;
    	      this.datadogApiKey = defaults.datadogApiKey;
    	      this.datadogRegion = defaults.datadogRegion;
    	      this.httpAuthorization = defaults.httpAuthorization;
    	      this.httpContentFormat = defaults.httpContentFormat;
    	      this.httpContentType = defaults.httpContentType;
    	      this.httpCustomHeaders = defaults.httpCustomHeaders;
    	      this.httpEndpoint = defaults.httpEndpoint;
    	      this.splunkDomain = defaults.splunkDomain;
    	      this.splunkPort = defaults.splunkPort;
    	      this.splunkSecure = defaults.splunkSecure;
    	      this.splunkToken = defaults.splunkToken;
    	      this.sumoSourceAddress = defaults.sumoSourceAddress;
        }

        public Builder awsAccountId(@Nullable String awsAccountId) {
            this.awsAccountId = awsAccountId;
            return this;
        }
        public Builder awsPartnerEventSource(@Nullable String awsPartnerEventSource) {
            this.awsPartnerEventSource = awsPartnerEventSource;
            return this;
        }
        public Builder awsRegion(@Nullable String awsRegion) {
            this.awsRegion = awsRegion;
            return this;
        }
        public Builder azurePartnerTopic(@Nullable String azurePartnerTopic) {
            this.azurePartnerTopic = azurePartnerTopic;
            return this;
        }
        public Builder azureRegion(@Nullable String azureRegion) {
            this.azureRegion = azureRegion;
            return this;
        }
        public Builder azureResourceGroup(@Nullable String azureResourceGroup) {
            this.azureResourceGroup = azureResourceGroup;
            return this;
        }
        public Builder azureSubscriptionId(@Nullable String azureSubscriptionId) {
            this.azureSubscriptionId = azureSubscriptionId;
            return this;
        }
        public Builder datadogApiKey(@Nullable String datadogApiKey) {
            this.datadogApiKey = datadogApiKey;
            return this;
        }
        public Builder datadogRegion(@Nullable String datadogRegion) {
            this.datadogRegion = datadogRegion;
            return this;
        }
        public Builder httpAuthorization(@Nullable String httpAuthorization) {
            this.httpAuthorization = httpAuthorization;
            return this;
        }
        public Builder httpContentFormat(@Nullable String httpContentFormat) {
            this.httpContentFormat = httpContentFormat;
            return this;
        }
        public Builder httpContentType(@Nullable String httpContentType) {
            this.httpContentType = httpContentType;
            return this;
        }
        public Builder httpCustomHeaders(@Nullable List<Map<String,String>> httpCustomHeaders) {
            this.httpCustomHeaders = httpCustomHeaders;
            return this;
        }
        public Builder httpEndpoint(@Nullable String httpEndpoint) {
            this.httpEndpoint = httpEndpoint;
            return this;
        }
        public Builder splunkDomain(@Nullable String splunkDomain) {
            this.splunkDomain = splunkDomain;
            return this;
        }
        public Builder splunkPort(@Nullable String splunkPort) {
            this.splunkPort = splunkPort;
            return this;
        }
        public Builder splunkSecure(@Nullable Boolean splunkSecure) {
            this.splunkSecure = splunkSecure;
            return this;
        }
        public Builder splunkToken(@Nullable String splunkToken) {
            this.splunkToken = splunkToken;
            return this;
        }
        public Builder sumoSourceAddress(@Nullable String sumoSourceAddress) {
            this.sumoSourceAddress = sumoSourceAddress;
            return this;
        }        public LogStreamSink build() {
            return new LogStreamSink(awsAccountId, awsPartnerEventSource, awsRegion, azurePartnerTopic, azureRegion, azureResourceGroup, azureSubscriptionId, datadogApiKey, datadogRegion, httpAuthorization, httpContentFormat, httpContentType, httpCustomHeaders, httpEndpoint, splunkDomain, splunkPort, splunkSecure, splunkToken, sumoSourceAddress);
        }
    }
}
