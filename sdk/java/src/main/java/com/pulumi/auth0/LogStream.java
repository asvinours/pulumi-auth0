// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0;

import com.pulumi.auth0.LogStreamArgs;
import com.pulumi.auth0.Utilities;
import com.pulumi.auth0.inputs.LogStreamState;
import com.pulumi.auth0.outputs.LogStreamSink;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * With this resource, you can manage your Auth0 log streams.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.auth0.LogStream;
 * import com.pulumi.auth0.LogStreamArgs;
 * import com.pulumi.auth0.inputs.LogStreamSinkArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new LogStream(&#34;example&#34;, LogStreamArgs.builder()        
 *             .filters(            
 *                 Map.ofEntries(
 *                     Map.entry(&#34;name&#34;, &#34;auth.login.fail&#34;),
 *                     Map.entry(&#34;type&#34;, &#34;category&#34;)
 *                 ),
 *                 Map.ofEntries(
 *                     Map.entry(&#34;name&#34;, &#34;auth.signup.fail&#34;),
 *                     Map.entry(&#34;type&#34;, &#34;category&#34;)
 *                 ))
 *             .sink(LogStreamSinkArgs.builder()
 *                 .awsAccountId(&#34;my_account_id&#34;)
 *                 .awsRegion(&#34;us-east-2&#34;)
 *                 .build())
 *             .status(&#34;active&#34;)
 *             .type(&#34;eventbridge&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Existing log stream can be imported using log stream id, e.g.
 * 
 * ```sh
 *  $ pulumi import auth0:index/logStream:LogStream example lst_XXXXXXXXXXXXXXXX
 * ```
 * 
 */
@ResourceType(type="auth0:index/logStream:LogStream")
public class LogStream extends com.pulumi.resources.CustomResource {
    /**
     * Only logs events matching these filters will be delivered by the stream.
     * 
     */
    @Export(name="filters", type=List.class, parameters={Map.class})
    private Output</* @Nullable */ List<Map<String,String>>> filters;

    /**
     * @return Only logs events matching these filters will be delivered by the stream.
     * 
     */
    public Output<Optional<List<Map<String,String>>>> filters() {
        return Codegen.optional(this.filters);
    }
    /**
     * Name of the log stream
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the log stream
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * List(Resource) The sink configuration for the log stream. For details, see Sink Configuration.
     * 
     */
    @Export(name="sink", type=LogStreamSink.class, parameters={})
    private Output<LogStreamSink> sink;

    /**
     * @return List(Resource) The sink configuration for the log stream. For details, see Sink Configuration.
     * 
     */
    public Output<LogStreamSink> sink() {
        return this.sink;
    }
    /**
     * The current status of the log stream. Options are &#34;active&#34;, &#34;paused&#34;, &#34;suspended&#34;
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return The current status of the log stream. Options are &#34;active&#34;, &#34;paused&#34;, &#34;suspended&#34;
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The type of log stream. Options are &#34;eventbridge&#34;, &#34;eventgrid&#34;, &#34;http&#34;, &#34;datadog&#34;, &#34;splunk&#34;, &#34;sumo&#34;
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of log stream. Options are &#34;eventbridge&#34;, &#34;eventgrid&#34;, &#34;http&#34;, &#34;datadog&#34;, &#34;splunk&#34;, &#34;sumo&#34;
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LogStream(String name) {
        this(name, LogStreamArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LogStream(String name, LogStreamArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LogStream(String name, LogStreamArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("auth0:index/logStream:LogStream", name, args == null ? LogStreamArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private LogStream(String name, Output<String> id, @Nullable LogStreamState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("auth0:index/logStream:LogStream", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LogStream get(String name, Output<String> id, @Nullable LogStreamState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LogStream(name, id, state, options);
    }
}
