// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClientGrantState extends com.pulumi.resources.ResourceArgs {

    public static final ClientGrantState Empty = new ClientGrantState();

    /**
     * String. Audience or API Identifier for this grant.
     * 
     */
    @Import(name="audience")
    private @Nullable Output<String> audience;

    /**
     * @return String. Audience or API Identifier for this grant.
     * 
     */
    public Optional<Output<String>> audience() {
        return Optional.ofNullable(this.audience);
    }

    /**
     * String. ID of the client for this grant.
     * 
     */
    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    /**
     * @return String. ID of the client for this grant.
     * 
     */
    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * List(String). Permissions (scopes) included in this grant.
     * 
     */
    @Import(name="scopes")
    private @Nullable Output<List<String>> scopes;

    /**
     * @return List(String). Permissions (scopes) included in this grant.
     * 
     */
    public Optional<Output<List<String>>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    private ClientGrantState() {}

    private ClientGrantState(ClientGrantState $) {
        this.audience = $.audience;
        this.clientId = $.clientId;
        this.scopes = $.scopes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClientGrantState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClientGrantState $;

        public Builder() {
            $ = new ClientGrantState();
        }

        public Builder(ClientGrantState defaults) {
            $ = new ClientGrantState(Objects.requireNonNull(defaults));
        }

        /**
         * @param audience String. Audience or API Identifier for this grant.
         * 
         * @return builder
         * 
         */
        public Builder audience(@Nullable Output<String> audience) {
            $.audience = audience;
            return this;
        }

        /**
         * @param audience String. Audience or API Identifier for this grant.
         * 
         * @return builder
         * 
         */
        public Builder audience(String audience) {
            return audience(Output.of(audience));
        }

        /**
         * @param clientId String. ID of the client for this grant.
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId String. ID of the client for this grant.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param scopes List(String). Permissions (scopes) included in this grant.
         * 
         * @return builder
         * 
         */
        public Builder scopes(@Nullable Output<List<String>> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes List(String). Permissions (scopes) included in this grant.
         * 
         * @return builder
         * 
         */
        public Builder scopes(List<String> scopes) {
            return scopes(Output.of(scopes));
        }

        /**
         * @param scopes List(String). Permissions (scopes) included in this grant.
         * 
         * @return builder
         * 
         */
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        public ClientGrantState build() {
            return $;
        }
    }

}
