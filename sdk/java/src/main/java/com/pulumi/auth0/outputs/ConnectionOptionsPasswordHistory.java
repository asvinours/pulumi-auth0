// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectionOptionsPasswordHistory {
    /**
     * @return Indicates whether password history is enabled for the connection. When enabled, any existing users in this connection will be unaffected; the system will maintain their password history going forward.
     * 
     */
    private final @Nullable Boolean enable;
    /**
     * @return Indicates the number of passwords to keep in history with a maximum of 24.
     * 
     */
    private final @Nullable Integer size;

    @CustomType.Constructor
    private ConnectionOptionsPasswordHistory(
        @CustomType.Parameter("enable") @Nullable Boolean enable,
        @CustomType.Parameter("size") @Nullable Integer size) {
        this.enable = enable;
        this.size = size;
    }

    /**
     * @return Indicates whether password history is enabled for the connection. When enabled, any existing users in this connection will be unaffected; the system will maintain their password history going forward.
     * 
     */
    public Optional<Boolean> enable() {
        return Optional.ofNullable(this.enable);
    }
    /**
     * @return Indicates the number of passwords to keep in history with a maximum of 24.
     * 
     */
    public Optional<Integer> size() {
        return Optional.ofNullable(this.size);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionOptionsPasswordHistory defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean enable;
        private @Nullable Integer size;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectionOptionsPasswordHistory defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enable = defaults.enable;
    	      this.size = defaults.size;
        }

        public Builder enable(@Nullable Boolean enable) {
            this.enable = enable;
            return this;
        }
        public Builder size(@Nullable Integer size) {
            this.size = size;
            return this;
        }        public ConnectionOptionsPasswordHistory build() {
            return new ConnectionOptionsPasswordHistory(enable, size);
        }
    }
}
