// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class TenantErrorPageArgs extends com.pulumi.resources.ResourceArgs {

    public static final TenantErrorPageArgs Empty = new TenantErrorPageArgs();

    /**
     * HTML format with supported Liquid syntax. Customized content of the error page.
     * 
     */
    @Import(name="html", required=true)
    private Output<String> html;

    /**
     * @return HTML format with supported Liquid syntax. Customized content of the error page.
     * 
     */
    public Output<String> html() {
        return this.html;
    }

    /**
     * Indicates whether to show the link to logs as part of the default error page.
     * 
     */
    @Import(name="showLogLink", required=true)
    private Output<Boolean> showLogLink;

    /**
     * @return Indicates whether to show the link to logs as part of the default error page.
     * 
     */
    public Output<Boolean> showLogLink() {
        return this.showLogLink;
    }

    /**
     * URL to redirect to when an error occurs rather than showing the default error page.
     * 
     */
    @Import(name="url", required=true)
    private Output<String> url;

    /**
     * @return URL to redirect to when an error occurs rather than showing the default error page.
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    private TenantErrorPageArgs() {}

    private TenantErrorPageArgs(TenantErrorPageArgs $) {
        this.html = $.html;
        this.showLogLink = $.showLogLink;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TenantErrorPageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TenantErrorPageArgs $;

        public Builder() {
            $ = new TenantErrorPageArgs();
        }

        public Builder(TenantErrorPageArgs defaults) {
            $ = new TenantErrorPageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param html HTML format with supported Liquid syntax. Customized content of the error page.
         * 
         * @return builder
         * 
         */
        public Builder html(Output<String> html) {
            $.html = html;
            return this;
        }

        /**
         * @param html HTML format with supported Liquid syntax. Customized content of the error page.
         * 
         * @return builder
         * 
         */
        public Builder html(String html) {
            return html(Output.of(html));
        }

        /**
         * @param showLogLink Indicates whether to show the link to logs as part of the default error page.
         * 
         * @return builder
         * 
         */
        public Builder showLogLink(Output<Boolean> showLogLink) {
            $.showLogLink = showLogLink;
            return this;
        }

        /**
         * @param showLogLink Indicates whether to show the link to logs as part of the default error page.
         * 
         * @return builder
         * 
         */
        public Builder showLogLink(Boolean showLogLink) {
            return showLogLink(Output.of(showLogLink));
        }

        /**
         * @param url URL to redirect to when an error occurs rather than showing the default error page.
         * 
         * @return builder
         * 
         */
        public Builder url(Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url URL to redirect to when an error occurs rather than showing the default error page.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        public TenantErrorPageArgs build() {
            $.html = Objects.requireNonNull($.html, "expected parameter 'html' to be non-null");
            $.showLogLink = Objects.requireNonNull($.showLogLink, "expected parameter 'showLogLink' to be non-null");
            $.url = Objects.requireNonNull($.url, "expected parameter 'url' to be non-null");
            return $;
        }
    }

}
