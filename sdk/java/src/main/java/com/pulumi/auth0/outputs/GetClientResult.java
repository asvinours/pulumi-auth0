// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.auth0.outputs.GetClientAddon;
import com.pulumi.auth0.outputs.GetClientJwtConfiguration;
import com.pulumi.auth0.outputs.GetClientMobile;
import com.pulumi.auth0.outputs.GetClientNativeSocialLogin;
import com.pulumi.auth0.outputs.GetClientRefreshToken;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClientResult {
    private final List<GetClientAddon> addons;
    private final List<String> allowedClients;
    private final List<String> allowedLogoutUrls;
    private final List<String> allowedOrigins;
    private final String appType;
    private final List<String> callbacks;
    private final @Nullable String clientId;
    private final Map<String,Object> clientMetadata;
    private final String clientSecret;
    private final Boolean crossOriginAuth;
    private final String crossOriginLoc;
    private final String customLoginPage;
    private final Boolean customLoginPageOn;
    private final String description;
    private final Map<String,String> encryptionKey;
    private final String formTemplate;
    private final List<String> grantTypes;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final String initiateLoginUri;
    private final Boolean isFirstParty;
    private final Boolean isTokenEndpointIpHeaderTrusted;
    private final List<GetClientJwtConfiguration> jwtConfigurations;
    private final String logoUri;
    private final List<GetClientMobile> mobiles;
    private final @Nullable String name;
    private final List<GetClientNativeSocialLogin> nativeSocialLogins;
    private final Boolean oidcConformant;
    private final String organizationRequireBehavior;
    private final String organizationUsage;
    private final List<GetClientRefreshToken> refreshTokens;
    private final List<Map<String,Object>> signingKeys;
    private final Boolean sso;
    private final Boolean ssoDisabled;
    private final String tokenEndpointAuthMethod;
    private final List<String> webOrigins;

    @CustomType.Constructor
    private GetClientResult(
        @CustomType.Parameter("addons") List<GetClientAddon> addons,
        @CustomType.Parameter("allowedClients") List<String> allowedClients,
        @CustomType.Parameter("allowedLogoutUrls") List<String> allowedLogoutUrls,
        @CustomType.Parameter("allowedOrigins") List<String> allowedOrigins,
        @CustomType.Parameter("appType") String appType,
        @CustomType.Parameter("callbacks") List<String> callbacks,
        @CustomType.Parameter("clientId") @Nullable String clientId,
        @CustomType.Parameter("clientMetadata") Map<String,Object> clientMetadata,
        @CustomType.Parameter("clientSecret") String clientSecret,
        @CustomType.Parameter("crossOriginAuth") Boolean crossOriginAuth,
        @CustomType.Parameter("crossOriginLoc") String crossOriginLoc,
        @CustomType.Parameter("customLoginPage") String customLoginPage,
        @CustomType.Parameter("customLoginPageOn") Boolean customLoginPageOn,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("encryptionKey") Map<String,String> encryptionKey,
        @CustomType.Parameter("formTemplate") String formTemplate,
        @CustomType.Parameter("grantTypes") List<String> grantTypes,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("initiateLoginUri") String initiateLoginUri,
        @CustomType.Parameter("isFirstParty") Boolean isFirstParty,
        @CustomType.Parameter("isTokenEndpointIpHeaderTrusted") Boolean isTokenEndpointIpHeaderTrusted,
        @CustomType.Parameter("jwtConfigurations") List<GetClientJwtConfiguration> jwtConfigurations,
        @CustomType.Parameter("logoUri") String logoUri,
        @CustomType.Parameter("mobiles") List<GetClientMobile> mobiles,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("nativeSocialLogins") List<GetClientNativeSocialLogin> nativeSocialLogins,
        @CustomType.Parameter("oidcConformant") Boolean oidcConformant,
        @CustomType.Parameter("organizationRequireBehavior") String organizationRequireBehavior,
        @CustomType.Parameter("organizationUsage") String organizationUsage,
        @CustomType.Parameter("refreshTokens") List<GetClientRefreshToken> refreshTokens,
        @CustomType.Parameter("signingKeys") List<Map<String,Object>> signingKeys,
        @CustomType.Parameter("sso") Boolean sso,
        @CustomType.Parameter("ssoDisabled") Boolean ssoDisabled,
        @CustomType.Parameter("tokenEndpointAuthMethod") String tokenEndpointAuthMethod,
        @CustomType.Parameter("webOrigins") List<String> webOrigins) {
        this.addons = addons;
        this.allowedClients = allowedClients;
        this.allowedLogoutUrls = allowedLogoutUrls;
        this.allowedOrigins = allowedOrigins;
        this.appType = appType;
        this.callbacks = callbacks;
        this.clientId = clientId;
        this.clientMetadata = clientMetadata;
        this.clientSecret = clientSecret;
        this.crossOriginAuth = crossOriginAuth;
        this.crossOriginLoc = crossOriginLoc;
        this.customLoginPage = customLoginPage;
        this.customLoginPageOn = customLoginPageOn;
        this.description = description;
        this.encryptionKey = encryptionKey;
        this.formTemplate = formTemplate;
        this.grantTypes = grantTypes;
        this.id = id;
        this.initiateLoginUri = initiateLoginUri;
        this.isFirstParty = isFirstParty;
        this.isTokenEndpointIpHeaderTrusted = isTokenEndpointIpHeaderTrusted;
        this.jwtConfigurations = jwtConfigurations;
        this.logoUri = logoUri;
        this.mobiles = mobiles;
        this.name = name;
        this.nativeSocialLogins = nativeSocialLogins;
        this.oidcConformant = oidcConformant;
        this.organizationRequireBehavior = organizationRequireBehavior;
        this.organizationUsage = organizationUsage;
        this.refreshTokens = refreshTokens;
        this.signingKeys = signingKeys;
        this.sso = sso;
        this.ssoDisabled = ssoDisabled;
        this.tokenEndpointAuthMethod = tokenEndpointAuthMethod;
        this.webOrigins = webOrigins;
    }

    public List<GetClientAddon> addons() {
        return this.addons;
    }
    public List<String> allowedClients() {
        return this.allowedClients;
    }
    public List<String> allowedLogoutUrls() {
        return this.allowedLogoutUrls;
    }
    public List<String> allowedOrigins() {
        return this.allowedOrigins;
    }
    public String appType() {
        return this.appType;
    }
    public List<String> callbacks() {
        return this.callbacks;
    }
    public Optional<String> clientId() {
        return Optional.ofNullable(this.clientId);
    }
    public Map<String,Object> clientMetadata() {
        return this.clientMetadata;
    }
    public String clientSecret() {
        return this.clientSecret;
    }
    public Boolean crossOriginAuth() {
        return this.crossOriginAuth;
    }
    public String crossOriginLoc() {
        return this.crossOriginLoc;
    }
    public String customLoginPage() {
        return this.customLoginPage;
    }
    public Boolean customLoginPageOn() {
        return this.customLoginPageOn;
    }
    public String description() {
        return this.description;
    }
    public Map<String,String> encryptionKey() {
        return this.encryptionKey;
    }
    public String formTemplate() {
        return this.formTemplate;
    }
    public List<String> grantTypes() {
        return this.grantTypes;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String initiateLoginUri() {
        return this.initiateLoginUri;
    }
    public Boolean isFirstParty() {
        return this.isFirstParty;
    }
    public Boolean isTokenEndpointIpHeaderTrusted() {
        return this.isTokenEndpointIpHeaderTrusted;
    }
    public List<GetClientJwtConfiguration> jwtConfigurations() {
        return this.jwtConfigurations;
    }
    public String logoUri() {
        return this.logoUri;
    }
    public List<GetClientMobile> mobiles() {
        return this.mobiles;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public List<GetClientNativeSocialLogin> nativeSocialLogins() {
        return this.nativeSocialLogins;
    }
    public Boolean oidcConformant() {
        return this.oidcConformant;
    }
    public String organizationRequireBehavior() {
        return this.organizationRequireBehavior;
    }
    public String organizationUsage() {
        return this.organizationUsage;
    }
    public List<GetClientRefreshToken> refreshTokens() {
        return this.refreshTokens;
    }
    public List<Map<String,Object>> signingKeys() {
        return this.signingKeys;
    }
    public Boolean sso() {
        return this.sso;
    }
    public Boolean ssoDisabled() {
        return this.ssoDisabled;
    }
    public String tokenEndpointAuthMethod() {
        return this.tokenEndpointAuthMethod;
    }
    public List<String> webOrigins() {
        return this.webOrigins;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClientResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetClientAddon> addons;
        private List<String> allowedClients;
        private List<String> allowedLogoutUrls;
        private List<String> allowedOrigins;
        private String appType;
        private List<String> callbacks;
        private @Nullable String clientId;
        private Map<String,Object> clientMetadata;
        private String clientSecret;
        private Boolean crossOriginAuth;
        private String crossOriginLoc;
        private String customLoginPage;
        private Boolean customLoginPageOn;
        private String description;
        private Map<String,String> encryptionKey;
        private String formTemplate;
        private List<String> grantTypes;
        private String id;
        private String initiateLoginUri;
        private Boolean isFirstParty;
        private Boolean isTokenEndpointIpHeaderTrusted;
        private List<GetClientJwtConfiguration> jwtConfigurations;
        private String logoUri;
        private List<GetClientMobile> mobiles;
        private @Nullable String name;
        private List<GetClientNativeSocialLogin> nativeSocialLogins;
        private Boolean oidcConformant;
        private String organizationRequireBehavior;
        private String organizationUsage;
        private List<GetClientRefreshToken> refreshTokens;
        private List<Map<String,Object>> signingKeys;
        private Boolean sso;
        private Boolean ssoDisabled;
        private String tokenEndpointAuthMethod;
        private List<String> webOrigins;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClientResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addons = defaults.addons;
    	      this.allowedClients = defaults.allowedClients;
    	      this.allowedLogoutUrls = defaults.allowedLogoutUrls;
    	      this.allowedOrigins = defaults.allowedOrigins;
    	      this.appType = defaults.appType;
    	      this.callbacks = defaults.callbacks;
    	      this.clientId = defaults.clientId;
    	      this.clientMetadata = defaults.clientMetadata;
    	      this.clientSecret = defaults.clientSecret;
    	      this.crossOriginAuth = defaults.crossOriginAuth;
    	      this.crossOriginLoc = defaults.crossOriginLoc;
    	      this.customLoginPage = defaults.customLoginPage;
    	      this.customLoginPageOn = defaults.customLoginPageOn;
    	      this.description = defaults.description;
    	      this.encryptionKey = defaults.encryptionKey;
    	      this.formTemplate = defaults.formTemplate;
    	      this.grantTypes = defaults.grantTypes;
    	      this.id = defaults.id;
    	      this.initiateLoginUri = defaults.initiateLoginUri;
    	      this.isFirstParty = defaults.isFirstParty;
    	      this.isTokenEndpointIpHeaderTrusted = defaults.isTokenEndpointIpHeaderTrusted;
    	      this.jwtConfigurations = defaults.jwtConfigurations;
    	      this.logoUri = defaults.logoUri;
    	      this.mobiles = defaults.mobiles;
    	      this.name = defaults.name;
    	      this.nativeSocialLogins = defaults.nativeSocialLogins;
    	      this.oidcConformant = defaults.oidcConformant;
    	      this.organizationRequireBehavior = defaults.organizationRequireBehavior;
    	      this.organizationUsage = defaults.organizationUsage;
    	      this.refreshTokens = defaults.refreshTokens;
    	      this.signingKeys = defaults.signingKeys;
    	      this.sso = defaults.sso;
    	      this.ssoDisabled = defaults.ssoDisabled;
    	      this.tokenEndpointAuthMethod = defaults.tokenEndpointAuthMethod;
    	      this.webOrigins = defaults.webOrigins;
        }

        public Builder addons(List<GetClientAddon> addons) {
            this.addons = Objects.requireNonNull(addons);
            return this;
        }
        public Builder addons(GetClientAddon... addons) {
            return addons(List.of(addons));
        }
        public Builder allowedClients(List<String> allowedClients) {
            this.allowedClients = Objects.requireNonNull(allowedClients);
            return this;
        }
        public Builder allowedClients(String... allowedClients) {
            return allowedClients(List.of(allowedClients));
        }
        public Builder allowedLogoutUrls(List<String> allowedLogoutUrls) {
            this.allowedLogoutUrls = Objects.requireNonNull(allowedLogoutUrls);
            return this;
        }
        public Builder allowedLogoutUrls(String... allowedLogoutUrls) {
            return allowedLogoutUrls(List.of(allowedLogoutUrls));
        }
        public Builder allowedOrigins(List<String> allowedOrigins) {
            this.allowedOrigins = Objects.requireNonNull(allowedOrigins);
            return this;
        }
        public Builder allowedOrigins(String... allowedOrigins) {
            return allowedOrigins(List.of(allowedOrigins));
        }
        public Builder appType(String appType) {
            this.appType = Objects.requireNonNull(appType);
            return this;
        }
        public Builder callbacks(List<String> callbacks) {
            this.callbacks = Objects.requireNonNull(callbacks);
            return this;
        }
        public Builder callbacks(String... callbacks) {
            return callbacks(List.of(callbacks));
        }
        public Builder clientId(@Nullable String clientId) {
            this.clientId = clientId;
            return this;
        }
        public Builder clientMetadata(Map<String,Object> clientMetadata) {
            this.clientMetadata = Objects.requireNonNull(clientMetadata);
            return this;
        }
        public Builder clientSecret(String clientSecret) {
            this.clientSecret = Objects.requireNonNull(clientSecret);
            return this;
        }
        public Builder crossOriginAuth(Boolean crossOriginAuth) {
            this.crossOriginAuth = Objects.requireNonNull(crossOriginAuth);
            return this;
        }
        public Builder crossOriginLoc(String crossOriginLoc) {
            this.crossOriginLoc = Objects.requireNonNull(crossOriginLoc);
            return this;
        }
        public Builder customLoginPage(String customLoginPage) {
            this.customLoginPage = Objects.requireNonNull(customLoginPage);
            return this;
        }
        public Builder customLoginPageOn(Boolean customLoginPageOn) {
            this.customLoginPageOn = Objects.requireNonNull(customLoginPageOn);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder encryptionKey(Map<String,String> encryptionKey) {
            this.encryptionKey = Objects.requireNonNull(encryptionKey);
            return this;
        }
        public Builder formTemplate(String formTemplate) {
            this.formTemplate = Objects.requireNonNull(formTemplate);
            return this;
        }
        public Builder grantTypes(List<String> grantTypes) {
            this.grantTypes = Objects.requireNonNull(grantTypes);
            return this;
        }
        public Builder grantTypes(String... grantTypes) {
            return grantTypes(List.of(grantTypes));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder initiateLoginUri(String initiateLoginUri) {
            this.initiateLoginUri = Objects.requireNonNull(initiateLoginUri);
            return this;
        }
        public Builder isFirstParty(Boolean isFirstParty) {
            this.isFirstParty = Objects.requireNonNull(isFirstParty);
            return this;
        }
        public Builder isTokenEndpointIpHeaderTrusted(Boolean isTokenEndpointIpHeaderTrusted) {
            this.isTokenEndpointIpHeaderTrusted = Objects.requireNonNull(isTokenEndpointIpHeaderTrusted);
            return this;
        }
        public Builder jwtConfigurations(List<GetClientJwtConfiguration> jwtConfigurations) {
            this.jwtConfigurations = Objects.requireNonNull(jwtConfigurations);
            return this;
        }
        public Builder jwtConfigurations(GetClientJwtConfiguration... jwtConfigurations) {
            return jwtConfigurations(List.of(jwtConfigurations));
        }
        public Builder logoUri(String logoUri) {
            this.logoUri = Objects.requireNonNull(logoUri);
            return this;
        }
        public Builder mobiles(List<GetClientMobile> mobiles) {
            this.mobiles = Objects.requireNonNull(mobiles);
            return this;
        }
        public Builder mobiles(GetClientMobile... mobiles) {
            return mobiles(List.of(mobiles));
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder nativeSocialLogins(List<GetClientNativeSocialLogin> nativeSocialLogins) {
            this.nativeSocialLogins = Objects.requireNonNull(nativeSocialLogins);
            return this;
        }
        public Builder nativeSocialLogins(GetClientNativeSocialLogin... nativeSocialLogins) {
            return nativeSocialLogins(List.of(nativeSocialLogins));
        }
        public Builder oidcConformant(Boolean oidcConformant) {
            this.oidcConformant = Objects.requireNonNull(oidcConformant);
            return this;
        }
        public Builder organizationRequireBehavior(String organizationRequireBehavior) {
            this.organizationRequireBehavior = Objects.requireNonNull(organizationRequireBehavior);
            return this;
        }
        public Builder organizationUsage(String organizationUsage) {
            this.organizationUsage = Objects.requireNonNull(organizationUsage);
            return this;
        }
        public Builder refreshTokens(List<GetClientRefreshToken> refreshTokens) {
            this.refreshTokens = Objects.requireNonNull(refreshTokens);
            return this;
        }
        public Builder refreshTokens(GetClientRefreshToken... refreshTokens) {
            return refreshTokens(List.of(refreshTokens));
        }
        public Builder signingKeys(List<Map<String,Object>> signingKeys) {
            this.signingKeys = Objects.requireNonNull(signingKeys);
            return this;
        }
        public Builder sso(Boolean sso) {
            this.sso = Objects.requireNonNull(sso);
            return this;
        }
        public Builder ssoDisabled(Boolean ssoDisabled) {
            this.ssoDisabled = Objects.requireNonNull(ssoDisabled);
            return this;
        }
        public Builder tokenEndpointAuthMethod(String tokenEndpointAuthMethod) {
            this.tokenEndpointAuthMethod = Objects.requireNonNull(tokenEndpointAuthMethod);
            return this;
        }
        public Builder webOrigins(List<String> webOrigins) {
            this.webOrigins = Objects.requireNonNull(webOrigins);
            return this;
        }
        public Builder webOrigins(String... webOrigins) {
            return webOrigins(List.of(webOrigins));
        }        public GetClientResult build() {
            return new GetClientResult(addons, allowedClients, allowedLogoutUrls, allowedOrigins, appType, callbacks, clientId, clientMetadata, clientSecret, crossOriginAuth, crossOriginLoc, customLoginPage, customLoginPageOn, description, encryptionKey, formTemplate, grantTypes, id, initiateLoginUri, isFirstParty, isTokenEndpointIpHeaderTrusted, jwtConfigurations, logoUri, mobiles, name, nativeSocialLogins, oidcConformant, organizationRequireBehavior, organizationUsage, refreshTokens, signingKeys, sso, ssoDisabled, tokenEndpointAuthMethod, webOrigins);
        }
    }
}
