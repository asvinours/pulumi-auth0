// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GlobalClientAddonsSamlp {
    private @Nullable String audience;
    private @Nullable String authnContextClassRef;
    private @Nullable String binding;
    private @Nullable Boolean createUpnClaim;
    private @Nullable String destination;
    private @Nullable String digestAlgorithm;
    private @Nullable Boolean includeAttributeNameFormat;
    private @Nullable Integer lifetimeInSeconds;
    private @Nullable Map<String,Object> logout;
    private @Nullable Boolean mapIdentities;
    private @Nullable Boolean mapUnknownClaimsAsIs;
    private @Nullable Map<String,Object> mappings;
    private @Nullable String nameIdentifierFormat;
    private @Nullable List<String> nameIdentifierProbes;
    private @Nullable Boolean passthroughClaimsWithNoMapping;
    private @Nullable String recipient;
    private @Nullable Boolean signResponse;
    private @Nullable String signatureAlgorithm;
    private @Nullable String signingCert;
    private @Nullable Boolean typedAttributes;

    private GlobalClientAddonsSamlp() {}
    public Optional<String> audience() {
        return Optional.ofNullable(this.audience);
    }
    public Optional<String> authnContextClassRef() {
        return Optional.ofNullable(this.authnContextClassRef);
    }
    public Optional<String> binding() {
        return Optional.ofNullable(this.binding);
    }
    public Optional<Boolean> createUpnClaim() {
        return Optional.ofNullable(this.createUpnClaim);
    }
    public Optional<String> destination() {
        return Optional.ofNullable(this.destination);
    }
    public Optional<String> digestAlgorithm() {
        return Optional.ofNullable(this.digestAlgorithm);
    }
    public Optional<Boolean> includeAttributeNameFormat() {
        return Optional.ofNullable(this.includeAttributeNameFormat);
    }
    public Optional<Integer> lifetimeInSeconds() {
        return Optional.ofNullable(this.lifetimeInSeconds);
    }
    public Map<String,Object> logout() {
        return this.logout == null ? Map.of() : this.logout;
    }
    public Optional<Boolean> mapIdentities() {
        return Optional.ofNullable(this.mapIdentities);
    }
    public Optional<Boolean> mapUnknownClaimsAsIs() {
        return Optional.ofNullable(this.mapUnknownClaimsAsIs);
    }
    public Map<String,Object> mappings() {
        return this.mappings == null ? Map.of() : this.mappings;
    }
    public Optional<String> nameIdentifierFormat() {
        return Optional.ofNullable(this.nameIdentifierFormat);
    }
    public List<String> nameIdentifierProbes() {
        return this.nameIdentifierProbes == null ? List.of() : this.nameIdentifierProbes;
    }
    public Optional<Boolean> passthroughClaimsWithNoMapping() {
        return Optional.ofNullable(this.passthroughClaimsWithNoMapping);
    }
    public Optional<String> recipient() {
        return Optional.ofNullable(this.recipient);
    }
    public Optional<Boolean> signResponse() {
        return Optional.ofNullable(this.signResponse);
    }
    public Optional<String> signatureAlgorithm() {
        return Optional.ofNullable(this.signatureAlgorithm);
    }
    public Optional<String> signingCert() {
        return Optional.ofNullable(this.signingCert);
    }
    public Optional<Boolean> typedAttributes() {
        return Optional.ofNullable(this.typedAttributes);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GlobalClientAddonsSamlp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String audience;
        private @Nullable String authnContextClassRef;
        private @Nullable String binding;
        private @Nullable Boolean createUpnClaim;
        private @Nullable String destination;
        private @Nullable String digestAlgorithm;
        private @Nullable Boolean includeAttributeNameFormat;
        private @Nullable Integer lifetimeInSeconds;
        private @Nullable Map<String,Object> logout;
        private @Nullable Boolean mapIdentities;
        private @Nullable Boolean mapUnknownClaimsAsIs;
        private @Nullable Map<String,Object> mappings;
        private @Nullable String nameIdentifierFormat;
        private @Nullable List<String> nameIdentifierProbes;
        private @Nullable Boolean passthroughClaimsWithNoMapping;
        private @Nullable String recipient;
        private @Nullable Boolean signResponse;
        private @Nullable String signatureAlgorithm;
        private @Nullable String signingCert;
        private @Nullable Boolean typedAttributes;
        public Builder() {}
        public Builder(GlobalClientAddonsSamlp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.audience = defaults.audience;
    	      this.authnContextClassRef = defaults.authnContextClassRef;
    	      this.binding = defaults.binding;
    	      this.createUpnClaim = defaults.createUpnClaim;
    	      this.destination = defaults.destination;
    	      this.digestAlgorithm = defaults.digestAlgorithm;
    	      this.includeAttributeNameFormat = defaults.includeAttributeNameFormat;
    	      this.lifetimeInSeconds = defaults.lifetimeInSeconds;
    	      this.logout = defaults.logout;
    	      this.mapIdentities = defaults.mapIdentities;
    	      this.mapUnknownClaimsAsIs = defaults.mapUnknownClaimsAsIs;
    	      this.mappings = defaults.mappings;
    	      this.nameIdentifierFormat = defaults.nameIdentifierFormat;
    	      this.nameIdentifierProbes = defaults.nameIdentifierProbes;
    	      this.passthroughClaimsWithNoMapping = defaults.passthroughClaimsWithNoMapping;
    	      this.recipient = defaults.recipient;
    	      this.signResponse = defaults.signResponse;
    	      this.signatureAlgorithm = defaults.signatureAlgorithm;
    	      this.signingCert = defaults.signingCert;
    	      this.typedAttributes = defaults.typedAttributes;
        }

        @CustomType.Setter
        public Builder audience(@Nullable String audience) {
            this.audience = audience;
            return this;
        }
        @CustomType.Setter
        public Builder authnContextClassRef(@Nullable String authnContextClassRef) {
            this.authnContextClassRef = authnContextClassRef;
            return this;
        }
        @CustomType.Setter
        public Builder binding(@Nullable String binding) {
            this.binding = binding;
            return this;
        }
        @CustomType.Setter
        public Builder createUpnClaim(@Nullable Boolean createUpnClaim) {
            this.createUpnClaim = createUpnClaim;
            return this;
        }
        @CustomType.Setter
        public Builder destination(@Nullable String destination) {
            this.destination = destination;
            return this;
        }
        @CustomType.Setter
        public Builder digestAlgorithm(@Nullable String digestAlgorithm) {
            this.digestAlgorithm = digestAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder includeAttributeNameFormat(@Nullable Boolean includeAttributeNameFormat) {
            this.includeAttributeNameFormat = includeAttributeNameFormat;
            return this;
        }
        @CustomType.Setter
        public Builder lifetimeInSeconds(@Nullable Integer lifetimeInSeconds) {
            this.lifetimeInSeconds = lifetimeInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder logout(@Nullable Map<String,Object> logout) {
            this.logout = logout;
            return this;
        }
        @CustomType.Setter
        public Builder mapIdentities(@Nullable Boolean mapIdentities) {
            this.mapIdentities = mapIdentities;
            return this;
        }
        @CustomType.Setter
        public Builder mapUnknownClaimsAsIs(@Nullable Boolean mapUnknownClaimsAsIs) {
            this.mapUnknownClaimsAsIs = mapUnknownClaimsAsIs;
            return this;
        }
        @CustomType.Setter
        public Builder mappings(@Nullable Map<String,Object> mappings) {
            this.mappings = mappings;
            return this;
        }
        @CustomType.Setter
        public Builder nameIdentifierFormat(@Nullable String nameIdentifierFormat) {
            this.nameIdentifierFormat = nameIdentifierFormat;
            return this;
        }
        @CustomType.Setter
        public Builder nameIdentifierProbes(@Nullable List<String> nameIdentifierProbes) {
            this.nameIdentifierProbes = nameIdentifierProbes;
            return this;
        }
        public Builder nameIdentifierProbes(String... nameIdentifierProbes) {
            return nameIdentifierProbes(List.of(nameIdentifierProbes));
        }
        @CustomType.Setter
        public Builder passthroughClaimsWithNoMapping(@Nullable Boolean passthroughClaimsWithNoMapping) {
            this.passthroughClaimsWithNoMapping = passthroughClaimsWithNoMapping;
            return this;
        }
        @CustomType.Setter
        public Builder recipient(@Nullable String recipient) {
            this.recipient = recipient;
            return this;
        }
        @CustomType.Setter
        public Builder signResponse(@Nullable Boolean signResponse) {
            this.signResponse = signResponse;
            return this;
        }
        @CustomType.Setter
        public Builder signatureAlgorithm(@Nullable String signatureAlgorithm) {
            this.signatureAlgorithm = signatureAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder signingCert(@Nullable String signingCert) {
            this.signingCert = signingCert;
            return this;
        }
        @CustomType.Setter
        public Builder typedAttributes(@Nullable Boolean typedAttributes) {
            this.typedAttributes = typedAttributes;
            return this;
        }
        public GlobalClientAddonsSamlp build() {
            final var o = new GlobalClientAddonsSamlp();
            o.audience = audience;
            o.authnContextClassRef = authnContextClassRef;
            o.binding = binding;
            o.createUpnClaim = createUpnClaim;
            o.destination = destination;
            o.digestAlgorithm = digestAlgorithm;
            o.includeAttributeNameFormat = includeAttributeNameFormat;
            o.lifetimeInSeconds = lifetimeInSeconds;
            o.logout = logout;
            o.mapIdentities = mapIdentities;
            o.mapUnknownClaimsAsIs = mapUnknownClaimsAsIs;
            o.mappings = mappings;
            o.nameIdentifierFormat = nameIdentifierFormat;
            o.nameIdentifierProbes = nameIdentifierProbes;
            o.passthroughClaimsWithNoMapping = passthroughClaimsWithNoMapping;
            o.recipient = recipient;
            o.signResponse = signResponse;
            o.signatureAlgorithm = signatureAlgorithm;
            o.signingCert = signingCert;
            o.typedAttributes = typedAttributes;
            return o;
        }
    }
}
