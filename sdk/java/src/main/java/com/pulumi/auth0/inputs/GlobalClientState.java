// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.auth0.inputs.GlobalClientAddonsArgs;
import com.pulumi.auth0.inputs.GlobalClientJwtConfigurationArgs;
import com.pulumi.auth0.inputs.GlobalClientMobileArgs;
import com.pulumi.auth0.inputs.GlobalClientNativeSocialLoginArgs;
import com.pulumi.auth0.inputs.GlobalClientRefreshTokenArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GlobalClientState extends com.pulumi.resources.ResourceArgs {

    public static final GlobalClientState Empty = new GlobalClientState();

    @Import(name="addons")
    private @Nullable Output<GlobalClientAddonsArgs> addons;

    public Optional<Output<GlobalClientAddonsArgs>> addons() {
        return Optional.ofNullable(this.addons);
    }

    @Import(name="allowedClients")
    private @Nullable Output<List<String>> allowedClients;

    public Optional<Output<List<String>>> allowedClients() {
        return Optional.ofNullable(this.allowedClients);
    }

    @Import(name="allowedLogoutUrls")
    private @Nullable Output<List<String>> allowedLogoutUrls;

    public Optional<Output<List<String>>> allowedLogoutUrls() {
        return Optional.ofNullable(this.allowedLogoutUrls);
    }

    @Import(name="allowedOrigins")
    private @Nullable Output<List<String>> allowedOrigins;

    public Optional<Output<List<String>>> allowedOrigins() {
        return Optional.ofNullable(this.allowedOrigins);
    }

    @Import(name="appType")
    private @Nullable Output<String> appType;

    public Optional<Output<String>> appType() {
        return Optional.ofNullable(this.appType);
    }

    @Import(name="callbacks")
    private @Nullable Output<List<String>> callbacks;

    public Optional<Output<List<String>>> callbacks() {
        return Optional.ofNullable(this.callbacks);
    }

    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    @Import(name="clientMetadata")
    private @Nullable Output<Map<String,Object>> clientMetadata;

    public Optional<Output<Map<String,Object>>> clientMetadata() {
        return Optional.ofNullable(this.clientMetadata);
    }

    @Import(name="clientSecret")
    private @Nullable Output<String> clientSecret;

    public Optional<Output<String>> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }

    @Import(name="clientSecretRotationTrigger")
    private @Nullable Output<Map<String,Object>> clientSecretRotationTrigger;

    public Optional<Output<Map<String,Object>>> clientSecretRotationTrigger() {
        return Optional.ofNullable(this.clientSecretRotationTrigger);
    }

    @Import(name="crossOriginAuth")
    private @Nullable Output<Boolean> crossOriginAuth;

    public Optional<Output<Boolean>> crossOriginAuth() {
        return Optional.ofNullable(this.crossOriginAuth);
    }

    @Import(name="crossOriginLoc")
    private @Nullable Output<String> crossOriginLoc;

    public Optional<Output<String>> crossOriginLoc() {
        return Optional.ofNullable(this.crossOriginLoc);
    }

    @Import(name="customLoginPage")
    private @Nullable Output<String> customLoginPage;

    public Optional<Output<String>> customLoginPage() {
        return Optional.ofNullable(this.customLoginPage);
    }

    @Import(name="customLoginPageOn")
    private @Nullable Output<Boolean> customLoginPageOn;

    public Optional<Output<Boolean>> customLoginPageOn() {
        return Optional.ofNullable(this.customLoginPageOn);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="encryptionKey")
    private @Nullable Output<Map<String,String>> encryptionKey;

    public Optional<Output<Map<String,String>>> encryptionKey() {
        return Optional.ofNullable(this.encryptionKey);
    }

    @Import(name="formTemplate")
    private @Nullable Output<String> formTemplate;

    public Optional<Output<String>> formTemplate() {
        return Optional.ofNullable(this.formTemplate);
    }

    @Import(name="grantTypes")
    private @Nullable Output<List<String>> grantTypes;

    public Optional<Output<List<String>>> grantTypes() {
        return Optional.ofNullable(this.grantTypes);
    }

    @Import(name="initiateLoginUri")
    private @Nullable Output<String> initiateLoginUri;

    public Optional<Output<String>> initiateLoginUri() {
        return Optional.ofNullable(this.initiateLoginUri);
    }

    @Import(name="isFirstParty")
    private @Nullable Output<Boolean> isFirstParty;

    public Optional<Output<Boolean>> isFirstParty() {
        return Optional.ofNullable(this.isFirstParty);
    }

    @Import(name="isTokenEndpointIpHeaderTrusted")
    private @Nullable Output<Boolean> isTokenEndpointIpHeaderTrusted;

    public Optional<Output<Boolean>> isTokenEndpointIpHeaderTrusted() {
        return Optional.ofNullable(this.isTokenEndpointIpHeaderTrusted);
    }

    @Import(name="jwtConfiguration")
    private @Nullable Output<GlobalClientJwtConfigurationArgs> jwtConfiguration;

    public Optional<Output<GlobalClientJwtConfigurationArgs>> jwtConfiguration() {
        return Optional.ofNullable(this.jwtConfiguration);
    }

    @Import(name="logoUri")
    private @Nullable Output<String> logoUri;

    public Optional<Output<String>> logoUri() {
        return Optional.ofNullable(this.logoUri);
    }

    @Import(name="mobile")
    private @Nullable Output<GlobalClientMobileArgs> mobile;

    public Optional<Output<GlobalClientMobileArgs>> mobile() {
        return Optional.ofNullable(this.mobile);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="nativeSocialLogin")
    private @Nullable Output<GlobalClientNativeSocialLoginArgs> nativeSocialLogin;

    public Optional<Output<GlobalClientNativeSocialLoginArgs>> nativeSocialLogin() {
        return Optional.ofNullable(this.nativeSocialLogin);
    }

    @Import(name="oidcConformant")
    private @Nullable Output<Boolean> oidcConformant;

    public Optional<Output<Boolean>> oidcConformant() {
        return Optional.ofNullable(this.oidcConformant);
    }

    @Import(name="organizationRequireBehavior")
    private @Nullable Output<String> organizationRequireBehavior;

    public Optional<Output<String>> organizationRequireBehavior() {
        return Optional.ofNullable(this.organizationRequireBehavior);
    }

    @Import(name="organizationUsage")
    private @Nullable Output<String> organizationUsage;

    public Optional<Output<String>> organizationUsage() {
        return Optional.ofNullable(this.organizationUsage);
    }

    @Import(name="refreshToken")
    private @Nullable Output<GlobalClientRefreshTokenArgs> refreshToken;

    public Optional<Output<GlobalClientRefreshTokenArgs>> refreshToken() {
        return Optional.ofNullable(this.refreshToken);
    }

    @Import(name="signingKeys")
    private @Nullable Output<List<Map<String,Object>>> signingKeys;

    public Optional<Output<List<Map<String,Object>>>> signingKeys() {
        return Optional.ofNullable(this.signingKeys);
    }

    @Import(name="sso")
    private @Nullable Output<Boolean> sso;

    public Optional<Output<Boolean>> sso() {
        return Optional.ofNullable(this.sso);
    }

    @Import(name="ssoDisabled")
    private @Nullable Output<Boolean> ssoDisabled;

    public Optional<Output<Boolean>> ssoDisabled() {
        return Optional.ofNullable(this.ssoDisabled);
    }

    @Import(name="tokenEndpointAuthMethod")
    private @Nullable Output<String> tokenEndpointAuthMethod;

    public Optional<Output<String>> tokenEndpointAuthMethod() {
        return Optional.ofNullable(this.tokenEndpointAuthMethod);
    }

    @Import(name="webOrigins")
    private @Nullable Output<List<String>> webOrigins;

    public Optional<Output<List<String>>> webOrigins() {
        return Optional.ofNullable(this.webOrigins);
    }

    private GlobalClientState() {}

    private GlobalClientState(GlobalClientState $) {
        this.addons = $.addons;
        this.allowedClients = $.allowedClients;
        this.allowedLogoutUrls = $.allowedLogoutUrls;
        this.allowedOrigins = $.allowedOrigins;
        this.appType = $.appType;
        this.callbacks = $.callbacks;
        this.clientId = $.clientId;
        this.clientMetadata = $.clientMetadata;
        this.clientSecret = $.clientSecret;
        this.clientSecretRotationTrigger = $.clientSecretRotationTrigger;
        this.crossOriginAuth = $.crossOriginAuth;
        this.crossOriginLoc = $.crossOriginLoc;
        this.customLoginPage = $.customLoginPage;
        this.customLoginPageOn = $.customLoginPageOn;
        this.description = $.description;
        this.encryptionKey = $.encryptionKey;
        this.formTemplate = $.formTemplate;
        this.grantTypes = $.grantTypes;
        this.initiateLoginUri = $.initiateLoginUri;
        this.isFirstParty = $.isFirstParty;
        this.isTokenEndpointIpHeaderTrusted = $.isTokenEndpointIpHeaderTrusted;
        this.jwtConfiguration = $.jwtConfiguration;
        this.logoUri = $.logoUri;
        this.mobile = $.mobile;
        this.name = $.name;
        this.nativeSocialLogin = $.nativeSocialLogin;
        this.oidcConformant = $.oidcConformant;
        this.organizationRequireBehavior = $.organizationRequireBehavior;
        this.organizationUsage = $.organizationUsage;
        this.refreshToken = $.refreshToken;
        this.signingKeys = $.signingKeys;
        this.sso = $.sso;
        this.ssoDisabled = $.ssoDisabled;
        this.tokenEndpointAuthMethod = $.tokenEndpointAuthMethod;
        this.webOrigins = $.webOrigins;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GlobalClientState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GlobalClientState $;

        public Builder() {
            $ = new GlobalClientState();
        }

        public Builder(GlobalClientState defaults) {
            $ = new GlobalClientState(Objects.requireNonNull(defaults));
        }

        public Builder addons(@Nullable Output<GlobalClientAddonsArgs> addons) {
            $.addons = addons;
            return this;
        }

        public Builder addons(GlobalClientAddonsArgs addons) {
            return addons(Output.of(addons));
        }

        public Builder allowedClients(@Nullable Output<List<String>> allowedClients) {
            $.allowedClients = allowedClients;
            return this;
        }

        public Builder allowedClients(List<String> allowedClients) {
            return allowedClients(Output.of(allowedClients));
        }

        public Builder allowedClients(String... allowedClients) {
            return allowedClients(List.of(allowedClients));
        }

        public Builder allowedLogoutUrls(@Nullable Output<List<String>> allowedLogoutUrls) {
            $.allowedLogoutUrls = allowedLogoutUrls;
            return this;
        }

        public Builder allowedLogoutUrls(List<String> allowedLogoutUrls) {
            return allowedLogoutUrls(Output.of(allowedLogoutUrls));
        }

        public Builder allowedLogoutUrls(String... allowedLogoutUrls) {
            return allowedLogoutUrls(List.of(allowedLogoutUrls));
        }

        public Builder allowedOrigins(@Nullable Output<List<String>> allowedOrigins) {
            $.allowedOrigins = allowedOrigins;
            return this;
        }

        public Builder allowedOrigins(List<String> allowedOrigins) {
            return allowedOrigins(Output.of(allowedOrigins));
        }

        public Builder allowedOrigins(String... allowedOrigins) {
            return allowedOrigins(List.of(allowedOrigins));
        }

        public Builder appType(@Nullable Output<String> appType) {
            $.appType = appType;
            return this;
        }

        public Builder appType(String appType) {
            return appType(Output.of(appType));
        }

        public Builder callbacks(@Nullable Output<List<String>> callbacks) {
            $.callbacks = callbacks;
            return this;
        }

        public Builder callbacks(List<String> callbacks) {
            return callbacks(Output.of(callbacks));
        }

        public Builder callbacks(String... callbacks) {
            return callbacks(List.of(callbacks));
        }

        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        public Builder clientMetadata(@Nullable Output<Map<String,Object>> clientMetadata) {
            $.clientMetadata = clientMetadata;
            return this;
        }

        public Builder clientMetadata(Map<String,Object> clientMetadata) {
            return clientMetadata(Output.of(clientMetadata));
        }

        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        public Builder clientSecretRotationTrigger(@Nullable Output<Map<String,Object>> clientSecretRotationTrigger) {
            $.clientSecretRotationTrigger = clientSecretRotationTrigger;
            return this;
        }

        public Builder clientSecretRotationTrigger(Map<String,Object> clientSecretRotationTrigger) {
            return clientSecretRotationTrigger(Output.of(clientSecretRotationTrigger));
        }

        public Builder crossOriginAuth(@Nullable Output<Boolean> crossOriginAuth) {
            $.crossOriginAuth = crossOriginAuth;
            return this;
        }

        public Builder crossOriginAuth(Boolean crossOriginAuth) {
            return crossOriginAuth(Output.of(crossOriginAuth));
        }

        public Builder crossOriginLoc(@Nullable Output<String> crossOriginLoc) {
            $.crossOriginLoc = crossOriginLoc;
            return this;
        }

        public Builder crossOriginLoc(String crossOriginLoc) {
            return crossOriginLoc(Output.of(crossOriginLoc));
        }

        public Builder customLoginPage(@Nullable Output<String> customLoginPage) {
            $.customLoginPage = customLoginPage;
            return this;
        }

        public Builder customLoginPage(String customLoginPage) {
            return customLoginPage(Output.of(customLoginPage));
        }

        public Builder customLoginPageOn(@Nullable Output<Boolean> customLoginPageOn) {
            $.customLoginPageOn = customLoginPageOn;
            return this;
        }

        public Builder customLoginPageOn(Boolean customLoginPageOn) {
            return customLoginPageOn(Output.of(customLoginPageOn));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder encryptionKey(@Nullable Output<Map<String,String>> encryptionKey) {
            $.encryptionKey = encryptionKey;
            return this;
        }

        public Builder encryptionKey(Map<String,String> encryptionKey) {
            return encryptionKey(Output.of(encryptionKey));
        }

        public Builder formTemplate(@Nullable Output<String> formTemplate) {
            $.formTemplate = formTemplate;
            return this;
        }

        public Builder formTemplate(String formTemplate) {
            return formTemplate(Output.of(formTemplate));
        }

        public Builder grantTypes(@Nullable Output<List<String>> grantTypes) {
            $.grantTypes = grantTypes;
            return this;
        }

        public Builder grantTypes(List<String> grantTypes) {
            return grantTypes(Output.of(grantTypes));
        }

        public Builder grantTypes(String... grantTypes) {
            return grantTypes(List.of(grantTypes));
        }

        public Builder initiateLoginUri(@Nullable Output<String> initiateLoginUri) {
            $.initiateLoginUri = initiateLoginUri;
            return this;
        }

        public Builder initiateLoginUri(String initiateLoginUri) {
            return initiateLoginUri(Output.of(initiateLoginUri));
        }

        public Builder isFirstParty(@Nullable Output<Boolean> isFirstParty) {
            $.isFirstParty = isFirstParty;
            return this;
        }

        public Builder isFirstParty(Boolean isFirstParty) {
            return isFirstParty(Output.of(isFirstParty));
        }

        public Builder isTokenEndpointIpHeaderTrusted(@Nullable Output<Boolean> isTokenEndpointIpHeaderTrusted) {
            $.isTokenEndpointIpHeaderTrusted = isTokenEndpointIpHeaderTrusted;
            return this;
        }

        public Builder isTokenEndpointIpHeaderTrusted(Boolean isTokenEndpointIpHeaderTrusted) {
            return isTokenEndpointIpHeaderTrusted(Output.of(isTokenEndpointIpHeaderTrusted));
        }

        public Builder jwtConfiguration(@Nullable Output<GlobalClientJwtConfigurationArgs> jwtConfiguration) {
            $.jwtConfiguration = jwtConfiguration;
            return this;
        }

        public Builder jwtConfiguration(GlobalClientJwtConfigurationArgs jwtConfiguration) {
            return jwtConfiguration(Output.of(jwtConfiguration));
        }

        public Builder logoUri(@Nullable Output<String> logoUri) {
            $.logoUri = logoUri;
            return this;
        }

        public Builder logoUri(String logoUri) {
            return logoUri(Output.of(logoUri));
        }

        public Builder mobile(@Nullable Output<GlobalClientMobileArgs> mobile) {
            $.mobile = mobile;
            return this;
        }

        public Builder mobile(GlobalClientMobileArgs mobile) {
            return mobile(Output.of(mobile));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder nativeSocialLogin(@Nullable Output<GlobalClientNativeSocialLoginArgs> nativeSocialLogin) {
            $.nativeSocialLogin = nativeSocialLogin;
            return this;
        }

        public Builder nativeSocialLogin(GlobalClientNativeSocialLoginArgs nativeSocialLogin) {
            return nativeSocialLogin(Output.of(nativeSocialLogin));
        }

        public Builder oidcConformant(@Nullable Output<Boolean> oidcConformant) {
            $.oidcConformant = oidcConformant;
            return this;
        }

        public Builder oidcConformant(Boolean oidcConformant) {
            return oidcConformant(Output.of(oidcConformant));
        }

        public Builder organizationRequireBehavior(@Nullable Output<String> organizationRequireBehavior) {
            $.organizationRequireBehavior = organizationRequireBehavior;
            return this;
        }

        public Builder organizationRequireBehavior(String organizationRequireBehavior) {
            return organizationRequireBehavior(Output.of(organizationRequireBehavior));
        }

        public Builder organizationUsage(@Nullable Output<String> organizationUsage) {
            $.organizationUsage = organizationUsage;
            return this;
        }

        public Builder organizationUsage(String organizationUsage) {
            return organizationUsage(Output.of(organizationUsage));
        }

        public Builder refreshToken(@Nullable Output<GlobalClientRefreshTokenArgs> refreshToken) {
            $.refreshToken = refreshToken;
            return this;
        }

        public Builder refreshToken(GlobalClientRefreshTokenArgs refreshToken) {
            return refreshToken(Output.of(refreshToken));
        }

        public Builder signingKeys(@Nullable Output<List<Map<String,Object>>> signingKeys) {
            $.signingKeys = signingKeys;
            return this;
        }

        public Builder signingKeys(List<Map<String,Object>> signingKeys) {
            return signingKeys(Output.of(signingKeys));
        }

        public Builder signingKeys(Map<String,Object>... signingKeys) {
            return signingKeys(List.of(signingKeys));
        }

        public Builder sso(@Nullable Output<Boolean> sso) {
            $.sso = sso;
            return this;
        }

        public Builder sso(Boolean sso) {
            return sso(Output.of(sso));
        }

        public Builder ssoDisabled(@Nullable Output<Boolean> ssoDisabled) {
            $.ssoDisabled = ssoDisabled;
            return this;
        }

        public Builder ssoDisabled(Boolean ssoDisabled) {
            return ssoDisabled(Output.of(ssoDisabled));
        }

        public Builder tokenEndpointAuthMethod(@Nullable Output<String> tokenEndpointAuthMethod) {
            $.tokenEndpointAuthMethod = tokenEndpointAuthMethod;
            return this;
        }

        public Builder tokenEndpointAuthMethod(String tokenEndpointAuthMethod) {
            return tokenEndpointAuthMethod(Output.of(tokenEndpointAuthMethod));
        }

        public Builder webOrigins(@Nullable Output<List<String>> webOrigins) {
            $.webOrigins = webOrigins;
            return this;
        }

        public Builder webOrigins(List<String> webOrigins) {
            return webOrigins(Output.of(webOrigins));
        }

        public Builder webOrigins(String... webOrigins) {
            return webOrigins(List.of(webOrigins));
        }

        public GlobalClientState build() {
            return $;
        }
    }

}
