// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetGlobalClientAddonSamlp {
    private final String audience;
    private final String authnContextClassRef;
    private final String binding;
    private final Boolean createUpnClaim;
    private final String destination;
    private final String digestAlgorithm;
    private final Boolean includeAttributeNameFormat;
    private final Integer lifetimeInSeconds;
    private final Map<String,Object> logout;
    private final Boolean mapIdentities;
    private final Boolean mapUnknownClaimsAsIs;
    private final Map<String,Object> mappings;
    private final String nameIdentifierFormat;
    private final List<String> nameIdentifierProbes;
    private final Boolean passthroughClaimsWithNoMapping;
    private final String recipient;
    private final Boolean signResponse;
    private final String signatureAlgorithm;
    private final String signingCert;
    private final Boolean typedAttributes;

    @CustomType.Constructor
    private GetGlobalClientAddonSamlp(
        @CustomType.Parameter("audience") String audience,
        @CustomType.Parameter("authnContextClassRef") String authnContextClassRef,
        @CustomType.Parameter("binding") String binding,
        @CustomType.Parameter("createUpnClaim") Boolean createUpnClaim,
        @CustomType.Parameter("destination") String destination,
        @CustomType.Parameter("digestAlgorithm") String digestAlgorithm,
        @CustomType.Parameter("includeAttributeNameFormat") Boolean includeAttributeNameFormat,
        @CustomType.Parameter("lifetimeInSeconds") Integer lifetimeInSeconds,
        @CustomType.Parameter("logout") Map<String,Object> logout,
        @CustomType.Parameter("mapIdentities") Boolean mapIdentities,
        @CustomType.Parameter("mapUnknownClaimsAsIs") Boolean mapUnknownClaimsAsIs,
        @CustomType.Parameter("mappings") Map<String,Object> mappings,
        @CustomType.Parameter("nameIdentifierFormat") String nameIdentifierFormat,
        @CustomType.Parameter("nameIdentifierProbes") List<String> nameIdentifierProbes,
        @CustomType.Parameter("passthroughClaimsWithNoMapping") Boolean passthroughClaimsWithNoMapping,
        @CustomType.Parameter("recipient") String recipient,
        @CustomType.Parameter("signResponse") Boolean signResponse,
        @CustomType.Parameter("signatureAlgorithm") String signatureAlgorithm,
        @CustomType.Parameter("signingCert") String signingCert,
        @CustomType.Parameter("typedAttributes") Boolean typedAttributes) {
        this.audience = audience;
        this.authnContextClassRef = authnContextClassRef;
        this.binding = binding;
        this.createUpnClaim = createUpnClaim;
        this.destination = destination;
        this.digestAlgorithm = digestAlgorithm;
        this.includeAttributeNameFormat = includeAttributeNameFormat;
        this.lifetimeInSeconds = lifetimeInSeconds;
        this.logout = logout;
        this.mapIdentities = mapIdentities;
        this.mapUnknownClaimsAsIs = mapUnknownClaimsAsIs;
        this.mappings = mappings;
        this.nameIdentifierFormat = nameIdentifierFormat;
        this.nameIdentifierProbes = nameIdentifierProbes;
        this.passthroughClaimsWithNoMapping = passthroughClaimsWithNoMapping;
        this.recipient = recipient;
        this.signResponse = signResponse;
        this.signatureAlgorithm = signatureAlgorithm;
        this.signingCert = signingCert;
        this.typedAttributes = typedAttributes;
    }

    public String audience() {
        return this.audience;
    }
    public String authnContextClassRef() {
        return this.authnContextClassRef;
    }
    public String binding() {
        return this.binding;
    }
    public Boolean createUpnClaim() {
        return this.createUpnClaim;
    }
    public String destination() {
        return this.destination;
    }
    public String digestAlgorithm() {
        return this.digestAlgorithm;
    }
    public Boolean includeAttributeNameFormat() {
        return this.includeAttributeNameFormat;
    }
    public Integer lifetimeInSeconds() {
        return this.lifetimeInSeconds;
    }
    public Map<String,Object> logout() {
        return this.logout;
    }
    public Boolean mapIdentities() {
        return this.mapIdentities;
    }
    public Boolean mapUnknownClaimsAsIs() {
        return this.mapUnknownClaimsAsIs;
    }
    public Map<String,Object> mappings() {
        return this.mappings;
    }
    public String nameIdentifierFormat() {
        return this.nameIdentifierFormat;
    }
    public List<String> nameIdentifierProbes() {
        return this.nameIdentifierProbes;
    }
    public Boolean passthroughClaimsWithNoMapping() {
        return this.passthroughClaimsWithNoMapping;
    }
    public String recipient() {
        return this.recipient;
    }
    public Boolean signResponse() {
        return this.signResponse;
    }
    public String signatureAlgorithm() {
        return this.signatureAlgorithm;
    }
    public String signingCert() {
        return this.signingCert;
    }
    public Boolean typedAttributes() {
        return this.typedAttributes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGlobalClientAddonSamlp defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String audience;
        private String authnContextClassRef;
        private String binding;
        private Boolean createUpnClaim;
        private String destination;
        private String digestAlgorithm;
        private Boolean includeAttributeNameFormat;
        private Integer lifetimeInSeconds;
        private Map<String,Object> logout;
        private Boolean mapIdentities;
        private Boolean mapUnknownClaimsAsIs;
        private Map<String,Object> mappings;
        private String nameIdentifierFormat;
        private List<String> nameIdentifierProbes;
        private Boolean passthroughClaimsWithNoMapping;
        private String recipient;
        private Boolean signResponse;
        private String signatureAlgorithm;
        private String signingCert;
        private Boolean typedAttributes;

        public Builder() {
    	      // Empty
        }

        public Builder(GetGlobalClientAddonSamlp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.audience = defaults.audience;
    	      this.authnContextClassRef = defaults.authnContextClassRef;
    	      this.binding = defaults.binding;
    	      this.createUpnClaim = defaults.createUpnClaim;
    	      this.destination = defaults.destination;
    	      this.digestAlgorithm = defaults.digestAlgorithm;
    	      this.includeAttributeNameFormat = defaults.includeAttributeNameFormat;
    	      this.lifetimeInSeconds = defaults.lifetimeInSeconds;
    	      this.logout = defaults.logout;
    	      this.mapIdentities = defaults.mapIdentities;
    	      this.mapUnknownClaimsAsIs = defaults.mapUnknownClaimsAsIs;
    	      this.mappings = defaults.mappings;
    	      this.nameIdentifierFormat = defaults.nameIdentifierFormat;
    	      this.nameIdentifierProbes = defaults.nameIdentifierProbes;
    	      this.passthroughClaimsWithNoMapping = defaults.passthroughClaimsWithNoMapping;
    	      this.recipient = defaults.recipient;
    	      this.signResponse = defaults.signResponse;
    	      this.signatureAlgorithm = defaults.signatureAlgorithm;
    	      this.signingCert = defaults.signingCert;
    	      this.typedAttributes = defaults.typedAttributes;
        }

        public Builder audience(String audience) {
            this.audience = Objects.requireNonNull(audience);
            return this;
        }
        public Builder authnContextClassRef(String authnContextClassRef) {
            this.authnContextClassRef = Objects.requireNonNull(authnContextClassRef);
            return this;
        }
        public Builder binding(String binding) {
            this.binding = Objects.requireNonNull(binding);
            return this;
        }
        public Builder createUpnClaim(Boolean createUpnClaim) {
            this.createUpnClaim = Objects.requireNonNull(createUpnClaim);
            return this;
        }
        public Builder destination(String destination) {
            this.destination = Objects.requireNonNull(destination);
            return this;
        }
        public Builder digestAlgorithm(String digestAlgorithm) {
            this.digestAlgorithm = Objects.requireNonNull(digestAlgorithm);
            return this;
        }
        public Builder includeAttributeNameFormat(Boolean includeAttributeNameFormat) {
            this.includeAttributeNameFormat = Objects.requireNonNull(includeAttributeNameFormat);
            return this;
        }
        public Builder lifetimeInSeconds(Integer lifetimeInSeconds) {
            this.lifetimeInSeconds = Objects.requireNonNull(lifetimeInSeconds);
            return this;
        }
        public Builder logout(Map<String,Object> logout) {
            this.logout = Objects.requireNonNull(logout);
            return this;
        }
        public Builder mapIdentities(Boolean mapIdentities) {
            this.mapIdentities = Objects.requireNonNull(mapIdentities);
            return this;
        }
        public Builder mapUnknownClaimsAsIs(Boolean mapUnknownClaimsAsIs) {
            this.mapUnknownClaimsAsIs = Objects.requireNonNull(mapUnknownClaimsAsIs);
            return this;
        }
        public Builder mappings(Map<String,Object> mappings) {
            this.mappings = Objects.requireNonNull(mappings);
            return this;
        }
        public Builder nameIdentifierFormat(String nameIdentifierFormat) {
            this.nameIdentifierFormat = Objects.requireNonNull(nameIdentifierFormat);
            return this;
        }
        public Builder nameIdentifierProbes(List<String> nameIdentifierProbes) {
            this.nameIdentifierProbes = Objects.requireNonNull(nameIdentifierProbes);
            return this;
        }
        public Builder nameIdentifierProbes(String... nameIdentifierProbes) {
            return nameIdentifierProbes(List.of(nameIdentifierProbes));
        }
        public Builder passthroughClaimsWithNoMapping(Boolean passthroughClaimsWithNoMapping) {
            this.passthroughClaimsWithNoMapping = Objects.requireNonNull(passthroughClaimsWithNoMapping);
            return this;
        }
        public Builder recipient(String recipient) {
            this.recipient = Objects.requireNonNull(recipient);
            return this;
        }
        public Builder signResponse(Boolean signResponse) {
            this.signResponse = Objects.requireNonNull(signResponse);
            return this;
        }
        public Builder signatureAlgorithm(String signatureAlgorithm) {
            this.signatureAlgorithm = Objects.requireNonNull(signatureAlgorithm);
            return this;
        }
        public Builder signingCert(String signingCert) {
            this.signingCert = Objects.requireNonNull(signingCert);
            return this;
        }
        public Builder typedAttributes(Boolean typedAttributes) {
            this.typedAttributes = Objects.requireNonNull(typedAttributes);
            return this;
        }        public GetGlobalClientAddonSamlp build() {
            return new GetGlobalClientAddonSamlp(audience, authnContextClassRef, binding, createUpnClaim, destination, digestAlgorithm, includeAttributeNameFormat, lifetimeInSeconds, logout, mapIdentities, mapUnknownClaimsAsIs, mappings, nameIdentifierFormat, nameIdentifierProbes, passthroughClaimsWithNoMapping, recipient, signResponse, signatureAlgorithm, signingCert, typedAttributes);
        }
    }
}
