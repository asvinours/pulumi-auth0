// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0;

import com.pulumi.auth0.inputs.BrandingColorsArgs;
import com.pulumi.auth0.inputs.BrandingFontArgs;
import com.pulumi.auth0.inputs.BrandingUniversalLoginArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BrandingArgs extends com.pulumi.resources.ResourceArgs {

    public static final BrandingArgs Empty = new BrandingArgs();

    /**
     * List(Resource). Configuration settings for colors for branding. See Colors.
     * 
     */
    @Import(name="colors")
    private @Nullable Output<BrandingColorsArgs> colors;

    /**
     * @return List(Resource). Configuration settings for colors for branding. See Colors.
     * 
     */
    public Optional<Output<BrandingColorsArgs>> colors() {
        return Optional.ofNullable(this.colors);
    }

    /**
     * String. URL for the favicon.
     * 
     */
    @Import(name="faviconUrl")
    private @Nullable Output<String> faviconUrl;

    /**
     * @return String. URL for the favicon.
     * 
     */
    public Optional<Output<String>> faviconUrl() {
        return Optional.ofNullable(this.faviconUrl);
    }

    /**
     * List(Resource). Configuration settings to customize the font. See Font.
     * 
     */
    @Import(name="font")
    private @Nullable Output<BrandingFontArgs> font;

    /**
     * @return List(Resource). Configuration settings to customize the font. See Font.
     * 
     */
    public Optional<Output<BrandingFontArgs>> font() {
        return Optional.ofNullable(this.font);
    }

    /**
     * String. URL of logo for branding.
     * 
     */
    @Import(name="logoUrl")
    private @Nullable Output<String> logoUrl;

    /**
     * @return String. URL of logo for branding.
     * 
     */
    public Optional<Output<String>> logoUrl() {
        return Optional.ofNullable(this.logoUrl);
    }

    /**
     * List(Resource). Configuration settings for Universal Login.
     * See Universal Login. This capability can only be used if the tenant has
     * [Custom Domains](https://auth0.com/docs/custom-domains) enabled.
     * 
     */
    @Import(name="universalLogin")
    private @Nullable Output<BrandingUniversalLoginArgs> universalLogin;

    /**
     * @return List(Resource). Configuration settings for Universal Login.
     * See Universal Login. This capability can only be used if the tenant has
     * [Custom Domains](https://auth0.com/docs/custom-domains) enabled.
     * 
     */
    public Optional<Output<BrandingUniversalLoginArgs>> universalLogin() {
        return Optional.ofNullable(this.universalLogin);
    }

    private BrandingArgs() {}

    private BrandingArgs(BrandingArgs $) {
        this.colors = $.colors;
        this.faviconUrl = $.faviconUrl;
        this.font = $.font;
        this.logoUrl = $.logoUrl;
        this.universalLogin = $.universalLogin;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BrandingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BrandingArgs $;

        public Builder() {
            $ = new BrandingArgs();
        }

        public Builder(BrandingArgs defaults) {
            $ = new BrandingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param colors List(Resource). Configuration settings for colors for branding. See Colors.
         * 
         * @return builder
         * 
         */
        public Builder colors(@Nullable Output<BrandingColorsArgs> colors) {
            $.colors = colors;
            return this;
        }

        /**
         * @param colors List(Resource). Configuration settings for colors for branding. See Colors.
         * 
         * @return builder
         * 
         */
        public Builder colors(BrandingColorsArgs colors) {
            return colors(Output.of(colors));
        }

        /**
         * @param faviconUrl String. URL for the favicon.
         * 
         * @return builder
         * 
         */
        public Builder faviconUrl(@Nullable Output<String> faviconUrl) {
            $.faviconUrl = faviconUrl;
            return this;
        }

        /**
         * @param faviconUrl String. URL for the favicon.
         * 
         * @return builder
         * 
         */
        public Builder faviconUrl(String faviconUrl) {
            return faviconUrl(Output.of(faviconUrl));
        }

        /**
         * @param font List(Resource). Configuration settings to customize the font. See Font.
         * 
         * @return builder
         * 
         */
        public Builder font(@Nullable Output<BrandingFontArgs> font) {
            $.font = font;
            return this;
        }

        /**
         * @param font List(Resource). Configuration settings to customize the font. See Font.
         * 
         * @return builder
         * 
         */
        public Builder font(BrandingFontArgs font) {
            return font(Output.of(font));
        }

        /**
         * @param logoUrl String. URL of logo for branding.
         * 
         * @return builder
         * 
         */
        public Builder logoUrl(@Nullable Output<String> logoUrl) {
            $.logoUrl = logoUrl;
            return this;
        }

        /**
         * @param logoUrl String. URL of logo for branding.
         * 
         * @return builder
         * 
         */
        public Builder logoUrl(String logoUrl) {
            return logoUrl(Output.of(logoUrl));
        }

        /**
         * @param universalLogin List(Resource). Configuration settings for Universal Login.
         * See Universal Login. This capability can only be used if the tenant has
         * [Custom Domains](https://auth0.com/docs/custom-domains) enabled.
         * 
         * @return builder
         * 
         */
        public Builder universalLogin(@Nullable Output<BrandingUniversalLoginArgs> universalLogin) {
            $.universalLogin = universalLogin;
            return this;
        }

        /**
         * @param universalLogin List(Resource). Configuration settings for Universal Login.
         * See Universal Login. This capability can only be used if the tenant has
         * [Custom Domains](https://auth0.com/docs/custom-domains) enabled.
         * 
         * @return builder
         * 
         */
        public Builder universalLogin(BrandingUniversalLoginArgs universalLogin) {
            return universalLogin(Output.of(universalLogin));
        }

        public BrandingArgs build() {
            return $;
        }
    }

}
