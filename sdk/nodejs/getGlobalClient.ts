// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Retrieves a tenant's global Auth0 Application client.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as auth0 from "@pulumi/auth0";
 *
 * const global = pulumi.output(auth0.getGlobalClient());
 * ```
 */
export function getGlobalClient(args?: GetGlobalClientArgs, opts?: pulumi.InvokeOptions): Promise<GetGlobalClientResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("auth0:index/getGlobalClient:getGlobalClient", {
        "clientId": args.clientId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getGlobalClient.
 */
export interface GetGlobalClientArgs {
    /**
     * String. ID of the client.
     * * `clientSecret`<sup>1</sup> - String. Secret for the client; keep this private.
     */
    clientId?: string;
    name?: string;
}

/**
 * A collection of values returned by getGlobalClient.
 */
export interface GetGlobalClientResult {
    readonly addons: outputs.GetGlobalClientAddon[];
    readonly allowedClients: string[];
    readonly allowedLogoutUrls: string[];
    readonly allowedOrigins: string[];
    readonly appType: string;
    readonly callbacks: string[];
    /**
     * String. ID of the client.
     * * `clientSecret`<sup>1</sup> - String. Secret for the client; keep this private.
     */
    readonly clientId?: string;
    /**
     * (Optional) Map(String)
     */
    readonly clientMetadata: {[key: string]: any};
    readonly crossOriginAuth: boolean;
    readonly crossOriginLoc: string;
    /**
     * String. Content of the custom login page.
     */
    readonly customLoginPage: string;
    /**
     * Boolean. Indicates whether a custom login page is to be used.
     */
    readonly customLoginPageOn: boolean;
    readonly description: string;
    readonly encryptionKey: {[key: string]: string};
    readonly formTemplate: string;
    readonly grantTypes: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly initiateLoginUri: string;
    readonly isFirstParty: boolean;
    readonly isTokenEndpointIpHeaderTrusted: boolean;
    readonly jwtConfigurations: outputs.GetGlobalClientJwtConfiguration[];
    readonly logoUri: string;
    readonly mobiles: outputs.GetGlobalClientMobile[];
    readonly name?: string;
    readonly nativeSocialLogins: outputs.GetGlobalClientNativeSocialLogin[];
    readonly oidcConformant: boolean;
    readonly organizationRequireBehavior: string;
    readonly organizationUsage: string;
    readonly refreshTokens: outputs.GetGlobalClientRefreshToken[];
    readonly signingKeys: {[key: string]: any}[];
    readonly sso: boolean;
    readonly ssoDisabled: boolean;
    readonly tokenEndpointAuthMethod: string;
    readonly webOrigins: string[];
}

export function getGlobalClientOutput(args?: GetGlobalClientOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGlobalClientResult> {
    return pulumi.output(args).apply(a => getGlobalClient(a, opts))
}

/**
 * A collection of arguments for invoking getGlobalClient.
 */
export interface GetGlobalClientOutputArgs {
    /**
     * String. ID of the client.
     * * `clientSecret`<sup>1</sup> - String. Secret for the client; keep this private.
     */
    clientId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
